<?php

namespace ContainerRqrmNio;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSuluWebsite_DefaultControllerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'sulu_website.default_controller' shared service.
     *
     * @return \Sulu\Bundle\WebsiteBundle\Controller\DefaultController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 5).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 5).'/vendor/sulu/sulu/src/Sulu/Bundle/WebsiteBundle/Controller/WebsiteController.php';
        include_once \dirname(__DIR__, 5).'/vendor/sulu/sulu/src/Sulu/Bundle/WebsiteBundle/Controller/DefaultController.php';

        $container->services['sulu_website.default_controller'] = $instance = new \Sulu\Bundle\WebsiteBundle\Controller\DefaultController();

        $instance->setContainer((new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'doctrine' => ['services', 'doctrine', 'getDoctrineService', false],
            'form.factory' => ['services', '.container.private.form.factory', 'get_Container_Private_Form_FactoryService', false],
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'security.authorization_checker' => ['services', '.container.private.security.authorization_checker', 'get_Container_Private_Security_AuthorizationCheckerService', false],
            'security.csrf.token_manager' => ['services', '.container.private.security.csrf.token_manager', 'get_Container_Private_Security_Csrf_TokenManagerService', true],
            'security.token_storage' => ['services', '.container.private.security.token_storage', 'get_Container_Private_Security_TokenStorageService', false],
            'serializer' => ['services', '.container.private.serializer', 'get_Container_Private_SerializerService', true],
            'session' => ['privates', '.session.deprecated', 'get_Session_DeprecatedService', true],
            'sulu_core.webspace.request_analyzer' => ['services', 'sulu_core.webspace.request_analyzer', 'getSuluCore_Webspace_RequestAnalyzerService', false],
            'sulu_http_cache.cache_lifetime.enhancer' => ['services', 'sulu_http_cache.cache_lifetime.enhancer', 'getSuluHttpCache_CacheLifetime_EnhancerService', true],
            'sulu_website.resolver.parameter' => ['services', 'sulu_website.resolver.parameter', 'getSuluWebsite_Resolver_ParameterService', true],
            'twig' => ['services', '.container.private.twig', 'get_Container_Private_TwigService', false],
        ], [
            'doctrine' => '?',
            'form.factory' => '?',
            'http_kernel' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
            'security.authorization_checker' => '?',
            'security.csrf.token_manager' => '?',
            'security.token_storage' => '?',
            'serializer' => '?',
            'session' => '.session.deprecated',
            'sulu_core.webspace.request_analyzer' => '?',
            'sulu_http_cache.cache_lifetime.enhancer' => '?',
            'sulu_website.resolver.parameter' => '?',
            'twig' => '?',
        ]))->withContext('sulu_website.default_controller', $container));

        return $instance;
    }
}
