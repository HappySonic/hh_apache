<?php

namespace Proxies\__CG__\Sulu\Bundle\ContactBundle\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Account extends \Sulu\Bundle\ContactBundle\Entity\Account implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'id', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'name', 'lft', 'rgt', 'depth', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'created', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'changed', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'changer', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'creator', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'externalId', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'number', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'corporation', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'uid', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'registerNumber', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'placeOfJurisdiction', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'mainEmail', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'mainPhone', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'mainFax', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'mainUrl', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'mainContact', 'logo', 'children', 'parent', 'addresses', 'urls', 'phones', 'socialMediaProfiles', 'emails', 'notes', 'note', 'faxes', 'bankAccounts', 'tags', 'accountContacts', 'accountAddresses', 'medias', 'categories'];
        }

        return ['__isInitialized__', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'id', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'name', 'lft', 'rgt', 'depth', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'created', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'changed', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'changer', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'creator', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'externalId', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'number', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'corporation', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'uid', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'registerNumber', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'placeOfJurisdiction', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'mainEmail', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'mainPhone', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'mainFax', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'mainUrl', '' . "\0" . 'Sulu\\Bundle\\ContactBundle\\Entity\\Account' . "\0" . 'mainContact', 'logo', 'children', 'parent', 'addresses', 'urls', 'phones', 'socialMediaProfiles', 'emails', 'notes', 'note', 'faxes', 'bankAccounts', 'tags', 'accountContacts', 'accountAddresses', 'medias', 'categories'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Account $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setLft(int $lft): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLft', [$lft]);

        return parent::setLft($lft);
    }

    /**
     * {@inheritDoc}
     */
    public function getLft(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLft', []);

        return parent::getLft();
    }

    /**
     * {@inheritDoc}
     */
    public function setRgt(int $rgt): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRgt', [$rgt]);

        return parent::setRgt($rgt);
    }

    /**
     * {@inheritDoc}
     */
    public function getRgt(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRgt', []);

        return parent::getRgt();
    }

    /**
     * {@inheritDoc}
     */
    public function setDepth(int $depth): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDepth', [$depth]);

        return parent::setDepth($depth);
    }

    /**
     * {@inheritDoc}
     */
    public function getDepth(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepth', []);

        return parent::getDepth();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent(\Sulu\Bundle\ContactBundle\Entity\AccountInterface $parent = NULL): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', [$parent]);

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getParent(): ?\Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', []);

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function addUrl(\Sulu\Bundle\ContactBundle\Entity\Url $url): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUrl', [$url]);

        return parent::addUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUrl(\Sulu\Bundle\ContactBundle\Entity\Url $url): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUrl', [$url]);

        return parent::removeUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrls(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrls', []);

        return parent::getUrls();
    }

    /**
     * {@inheritDoc}
     */
    public function addPhone(\Sulu\Bundle\ContactBundle\Entity\Phone $phone): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPhone', [$phone]);

        return parent::addPhone($phone);
    }

    /**
     * {@inheritDoc}
     */
    public function removePhone(\Sulu\Bundle\ContactBundle\Entity\Phone $phone): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePhone', [$phone]);

        return parent::removePhone($phone);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhones(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhones', []);

        return parent::getPhones();
    }

    /**
     * {@inheritDoc}
     */
    public function addEmail(\Sulu\Bundle\ContactBundle\Entity\Email $email): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEmail', [$email]);

        return parent::addEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEmail(\Sulu\Bundle\ContactBundle\Entity\Email $email): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEmail', [$email]);

        return parent::removeEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmails(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmails', []);

        return parent::getEmails();
    }

    /**
     * {@inheritDoc}
     */
    public function setNote(?string $note): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNote', [$note]);

        return parent::setNote($note);
    }

    /**
     * {@inheritDoc}
     */
    public function getNote(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNote', []);

        return parent::getNote();
    }

    /**
     * {@inheritDoc}
     */
    public function addNote(\Sulu\Bundle\ContactBundle\Entity\Note $note): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addNote', [$note]);

        return parent::addNote($note);
    }

    /**
     * {@inheritDoc}
     */
    public function removeNote(\Sulu\Bundle\ContactBundle\Entity\Note $note): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeNote', [$note]);

        return parent::removeNote($note);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotes(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotes', []);

        return parent::getNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function addChildren(\Sulu\Bundle\ContactBundle\Entity\AccountInterface $children): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChildren', [$children]);

        return parent::addChildren($children);
    }

    /**
     * {@inheritDoc}
     */
    public function removeChildren(\Sulu\Bundle\ContactBundle\Entity\AccountInterface $children): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeChildren', [$children]);

        return parent::removeChildren($children);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildren(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildren', []);

        return parent::getChildren();
    }

    /**
     * {@inheritDoc}
     */
    public function addFax(\Sulu\Bundle\ContactBundle\Entity\Fax $fax): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFax', [$fax]);

        return parent::addFax($fax);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFax(\Sulu\Bundle\ContactBundle\Entity\Fax $fax): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFax', [$fax]);

        return parent::removeFax($fax);
    }

    /**
     * {@inheritDoc}
     */
    public function getFaxes(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFaxes', []);

        return parent::getFaxes();
    }

    /**
     * {@inheritDoc}
     */
    public function addSocialMediaProfile(\Sulu\Bundle\ContactBundle\Entity\SocialMediaProfile $socialMediaProfile): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSocialMediaProfile', [$socialMediaProfile]);

        return parent::addSocialMediaProfile($socialMediaProfile);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSocialMediaProfile(\Sulu\Bundle\ContactBundle\Entity\SocialMediaProfile $socialMediaProfile): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSocialMediaProfile', [$socialMediaProfile]);

        return parent::removeSocialMediaProfile($socialMediaProfile);
    }

    /**
     * {@inheritDoc}
     */
    public function getSocialMediaProfiles(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSocialMediaProfiles', []);

        return parent::getSocialMediaProfiles();
    }

    /**
     * {@inheritDoc}
     */
    public function addBankAccount(\Sulu\Bundle\ContactBundle\Entity\BankAccount $bankAccount): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBankAccount', [$bankAccount]);

        return parent::addBankAccount($bankAccount);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBankAccount(\Sulu\Bundle\ContactBundle\Entity\BankAccount $bankAccount): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBankAccount', [$bankAccount]);

        return parent::removeBankAccount($bankAccount);
    }

    /**
     * {@inheritDoc}
     */
    public function getBankAccounts(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBankAccounts', []);

        return parent::getBankAccounts();
    }

    /**
     * {@inheritDoc}
     */
    public function addTag(\Sulu\Bundle\TagBundle\Tag\TagInterface $tag): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTag', [$tag]);

        return parent::addTag($tag);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTag(\Sulu\Bundle\TagBundle\Tag\TagInterface $tag): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTag', [$tag]);

        return parent::removeTag($tag);
    }

    /**
     * {@inheritDoc}
     */
    public function getTags(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTags', []);

        return parent::getTags();
    }

    /**
     * {@inheritDoc}
     */
    public function getTagNameArray(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTagNameArray', []);

        return parent::getTagNameArray();
    }

    /**
     * {@inheritDoc}
     */
    public function addAccountContact(\Sulu\Bundle\ContactBundle\Entity\AccountContact $accountContact): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAccountContact', [$accountContact]);

        return parent::addAccountContact($accountContact);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAccountContact(\Sulu\Bundle\ContactBundle\Entity\AccountContact $accountContact): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAccountContact', [$accountContact]);

        return parent::removeAccountContact($accountContact);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccountContacts(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccountContacts', []);

        return parent::getAccountContacts();
    }

    /**
     * {@inheritDoc}
     */
    public function addAccountAddress(\Sulu\Bundle\ContactBundle\Entity\AccountAddress $accountAddress): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAccountAddress', [$accountAddress]);

        return parent::addAccountAddress($accountAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAccountAddress(\Sulu\Bundle\ContactBundle\Entity\AccountAddress $accountAddress): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAccountAddress', [$accountAddress]);

        return parent::removeAccountAddress($accountAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccountAddresses(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccountAddresses', []);

        return parent::getAccountAddresses();
    }

    /**
     * {@inheritDoc}
     */
    public function getAddresses(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddresses', []);

        return parent::getAddresses();
    }

    /**
     * {@inheritDoc}
     */
    public function getMainAddress(): ?\Sulu\Bundle\ContactBundle\Entity\Address
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMainAddress', []);

        return parent::getMainAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function getContacts(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContacts', []);

        return parent::getContacts();
    }

    /**
     * {@inheritDoc}
     */
    public function addMedia(\Sulu\Bundle\MediaBundle\Entity\MediaInterface $media): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMedia', [$media]);

        return parent::addMedia($media);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMedia(\Sulu\Bundle\MediaBundle\Entity\MediaInterface $media): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMedia', [$media]);

        return parent::removeMedia($media);
    }

    /**
     * {@inheritDoc}
     */
    public function getMedias(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMedias', []);

        return parent::getMedias();
    }

    /**
     * {@inheritDoc}
     */
    public function addChild(\Sulu\Bundle\ContactBundle\Entity\AccountInterface $children): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChild', [$children]);

        return parent::addChild($children);
    }

    /**
     * {@inheritDoc}
     */
    public function removeChild(\Sulu\Bundle\ContactBundle\Entity\AccountInterface $children): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeChild', [$children]);

        return parent::removeChild($children);
    }

    /**
     * {@inheritDoc}
     */
    public function addCategory(\Sulu\Bundle\CategoryBundle\Entity\CategoryInterface $category): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCategory', [$category]);

        return parent::addCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCategory(\Sulu\Bundle\CategoryBundle\Entity\CategoryInterface $category): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCategory', [$category]);

        return parent::removeCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategories(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategories', []);

        return parent::getCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setExternalId(?string $externalId): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExternalId', [$externalId]);

        return parent::setExternalId($externalId);
    }

    /**
     * {@inheritDoc}
     */
    public function getExternalId(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExternalId', []);

        return parent::getExternalId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumber(?string $number): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumber', [$number]);

        return parent::setNumber($number);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumber(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumber', []);

        return parent::getNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setCorporation(?string $corporation): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCorporation', [$corporation]);

        return parent::setCorporation($corporation);
    }

    /**
     * {@inheritDoc}
     */
    public function getCorporation(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCorporation', []);

        return parent::getCorporation();
    }

    /**
     * {@inheritDoc}
     */
    public function setUid(?string $uid): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUid', [$uid]);

        return parent::setUid($uid);
    }

    /**
     * {@inheritDoc}
     */
    public function getUid(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUid', []);

        return parent::getUid();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegisterNumber(?string $registerNumber): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegisterNumber', [$registerNumber]);

        return parent::setRegisterNumber($registerNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegisterNumber(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegisterNumber', []);

        return parent::getRegisterNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlaceOfJurisdiction(?string $placeOfJurisdiction): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlaceOfJurisdiction', [$placeOfJurisdiction]);

        return parent::setPlaceOfJurisdiction($placeOfJurisdiction);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlaceOfJurisdiction(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlaceOfJurisdiction', []);

        return parent::getPlaceOfJurisdiction();
    }

    /**
     * {@inheritDoc}
     */
    public function setMainEmail(string $mainEmail = NULL): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMainEmail', [$mainEmail]);

        return parent::setMainEmail($mainEmail);
    }

    /**
     * {@inheritDoc}
     */
    public function getMainEmail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMainEmail', []);

        return parent::getMainEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setMainPhone(string $mainPhone = NULL): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMainPhone', [$mainPhone]);

        return parent::setMainPhone($mainPhone);
    }

    /**
     * {@inheritDoc}
     */
    public function getMainPhone(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMainPhone', []);

        return parent::getMainPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function setMainFax(string $mainFax = NULL): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMainFax', [$mainFax]);

        return parent::setMainFax($mainFax);
    }

    /**
     * {@inheritDoc}
     */
    public function setLogo(\Sulu\Bundle\MediaBundle\Entity\MediaInterface $logo): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogo', [$logo]);

        return parent::setLogo($logo);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogo(): ?\Sulu\Bundle\MediaBundle\Entity\MediaInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogo', []);

        return parent::getLogo();
    }

    /**
     * {@inheritDoc}
     */
    public function getMainFax(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMainFax', []);

        return parent::getMainFax();
    }

    /**
     * {@inheritDoc}
     */
    public function setMainUrl(string $mainUrl = NULL): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMainUrl', [$mainUrl]);

        return parent::setMainUrl($mainUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getMainUrl(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMainUrl', []);

        return parent::getMainUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated(): \DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated(\DateTime $created): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', [$created]);

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getChanged(): \DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChanged', []);

        return parent::getChanged();
    }

    /**
     * {@inheritDoc}
     */
    public function setChanged(\DateTime $changed): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChanged', [$changed]);

        return parent::setChanged($changed);
    }

    /**
     * {@inheritDoc}
     */
    public function getChanger(): ?\Sulu\Component\Security\Authentication\UserInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChanger', []);

        return parent::getChanger();
    }

    /**
     * {@inheritDoc}
     */
    public function setChanger(?\Sulu\Component\Security\Authentication\UserInterface $changer): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChanger', [$changer]);

        return parent::setChanger($changer);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreator(): ?\Sulu\Component\Security\Authentication\UserInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreator', []);

        return parent::getCreator();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreator($creator): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreator', [$creator]);

        return parent::setCreator($creator);
    }

    /**
     * {@inheritDoc}
     */
    public function getMainContact(): ?\Sulu\Bundle\ContactBundle\Entity\ContactInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMainContact', []);

        return parent::getMainContact();
    }

    /**
     * {@inheritDoc}
     */
    public function setMainContact(\Sulu\Bundle\ContactBundle\Entity\ContactInterface $mainContact = NULL): \Sulu\Bundle\ContactBundle\Entity\AccountInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMainContact', [$mainContact]);

        return parent::setMainContact($mainContact);
    }

}
