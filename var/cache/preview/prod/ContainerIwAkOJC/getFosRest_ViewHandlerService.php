<?php

namespace ContainerIwAkOJC;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getFosRest_ViewHandlerService extends App_KernelProdContainer
{
    /*
     * Gets the public 'fos_rest.view_handler' shared service.
     *
     * @return \FOS\RestBundle\View\ViewHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 5).'/vendor/friendsofsymfony/rest-bundle/View/ViewHandlerInterface.php';
        include_once \dirname(__DIR__, 5).'/vendor/friendsofsymfony/rest-bundle/View/ConfigurableViewHandlerInterface.php';
        include_once \dirname(__DIR__, 5).'/vendor/friendsofsymfony/rest-bundle/View/ViewHandler.php';
        include_once \dirname(__DIR__, 5).'/vendor/friendsofsymfony/rest-bundle/Serializer/Serializer.php';
        include_once \dirname(__DIR__, 5).'/vendor/friendsofsymfony/rest-bundle/Serializer/JMSSerializerAdapter.php';
        include_once \dirname(__DIR__, 5).'/vendor/sulu/sulu/src/Sulu/Component/Rest/Csv/CsvHandler.php';

        $container->services['fos_rest.view_handler'] = $instance = \FOS\RestBundle\View\ViewHandler::create(($container->services['router'] ?? $container->getRouterService()), new \FOS\RestBundle\Serializer\JMSSerializerAdapter(($container->services['jms_serializer'] ?? $container->getJmsSerializerService()), ($container->services['jms_serializer.serialization_context_factory'] ?? ($container->services['jms_serializer.serialization_context_factory'] = new \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory())), ($container->services['jms_serializer.deserialization_context_factory'] ?? ($container->services['jms_serializer.deserialization_context_factory'] = new \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory()))), ($container->services['request_stack'] ?? ($container->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ['json' => false, 'csv' => false], 400, 204, false, ['serializeNullStrategy' => true]);

        $instance->registerHandler('csv', [0 => new \Sulu\Component\Rest\Csv\CsvHandler(($container->services['sulu_core.array_serializer'] ?? $container->getSuluCore_ArraySerializerService())), 1 => 'createResponse']);

        return $instance;
    }
}
