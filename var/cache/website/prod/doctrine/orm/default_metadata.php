<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'Sulu__Bundle__TrashBundle__Domain__Model__TrashItem__CLASSMETADATA__' => 0,
'Sulu_Bundle_TrashBundle_Domain_Model_TrashItem_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__TrashBundle__Domain__Model__TrashItemTranslation__CLASSMETADATA__' => 2,
'Sulu_Bundle_TrashBundle_Domain_Model_TrashItemTranslation_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ActivityBundle__Domain__Model__Activity__CLASSMETADATA__' => 3,
'Sulu_Bundle_ActivityBundle_Domain_Model_Activity_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__PreviewBundle__Domain__Model__PreviewLink__CLASSMETADATA__' => 4,
'Sulu_Bundle_PreviewBundle_Domain_Model_PreviewLink_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__ContactLocale__CLASSMETADATA__' => 5,
'Sulu_Bundle_ContactBundle_Entity_ContactLocale_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__Email__CLASSMETADATA__' => 6,
'Sulu_Bundle_ContactBundle_Entity_Email_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__Note__CLASSMETADATA__' => 7,
'Sulu_Bundle_ContactBundle_Entity_Note_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__Phone__CLASSMETADATA__' => 8,
'Sulu_Bundle_ContactBundle_Entity_Phone_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__Url__CLASSMETADATA__' => 9,
'Sulu_Bundle_ContactBundle_Entity_Url_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__Account__CLASSMETADATA__' => 10,
'Sulu_Bundle_ContactBundle_Entity_Account_$GEDMO_TREE_CLASSMETADATA' => 11,
'Sulu__Bundle__ContactBundle__Entity__Address__CLASSMETADATA__' => 12,
'Sulu_Bundle_ContactBundle_Entity_Address_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__SocialMediaProfileType__CLASSMETADATA__' => 13,
'Sulu_Bundle_ContactBundle_Entity_SocialMediaProfileType_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__PhoneType__CLASSMETADATA__' => 14,
'Sulu_Bundle_ContactBundle_Entity_PhoneType_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__SocialMediaProfile__CLASSMETADATA__' => 15,
'Sulu_Bundle_ContactBundle_Entity_SocialMediaProfile_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__UrlType__CLASSMETADATA__' => 16,
'Sulu_Bundle_ContactBundle_Entity_UrlType_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__AddressType__CLASSMETADATA__' => 17,
'Sulu_Bundle_ContactBundle_Entity_AddressType_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__ContactTitle__CLASSMETADATA__' => 18,
'Sulu_Bundle_ContactBundle_Entity_ContactTitle_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__Position__CLASSMETADATA__' => 19,
'Sulu_Bundle_ContactBundle_Entity_Position_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__ContactAddress__CLASSMETADATA__' => 20,
'Sulu_Bundle_ContactBundle_Entity_ContactAddress_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__Contact__CLASSMETADATA__' => 21,
'Sulu_Bundle_ContactBundle_Entity_Contact_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__AccountAddress__CLASSMETADATA__' => 22,
'Sulu_Bundle_ContactBundle_Entity_AccountAddress_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__Fax__CLASSMETADATA__' => 23,
'Sulu_Bundle_ContactBundle_Entity_Fax_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__AccountContact__CLASSMETADATA__' => 24,
'Sulu_Bundle_ContactBundle_Entity_AccountContact_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__EmailType__CLASSMETADATA__' => 25,
'Sulu_Bundle_ContactBundle_Entity_EmailType_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__FaxType__CLASSMETADATA__' => 26,
'Sulu_Bundle_ContactBundle_Entity_FaxType_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__ContactBundle__Entity__BankAccount__CLASSMETADATA__' => 27,
'Sulu_Bundle_ContactBundle_Entity_BankAccount_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__MediaBundle__Entity__FileVersionPublishLanguage__CLASSMETADATA__' => 28,
'Sulu_Bundle_MediaBundle_Entity_FileVersionPublishLanguage_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__MediaBundle__Entity__MediaType__CLASSMETADATA__' => 29,
'Sulu_Bundle_MediaBundle_Entity_MediaType_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__MediaBundle__Entity__FileVersionContentLanguage__CLASSMETADATA__' => 30,
'Sulu_Bundle_MediaBundle_Entity_FileVersionContentLanguage_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__MediaBundle__Entity__CollectionMeta__CLASSMETADATA__' => 31,
'Sulu_Bundle_MediaBundle_Entity_CollectionMeta_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__MediaBundle__Entity__CollectionType__CLASSMETADATA__' => 32,
'Sulu_Bundle_MediaBundle_Entity_CollectionType_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__MediaBundle__Entity__FileVersion__CLASSMETADATA__' => 33,
'Sulu_Bundle_MediaBundle_Entity_FileVersion_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__MediaBundle__Entity__FileVersionMeta__CLASSMETADATA__' => 34,
'Sulu_Bundle_MediaBundle_Entity_FileVersionMeta_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__MediaBundle__Entity__Collection__CLASSMETADATA__' => 35,
'Sulu_Bundle_MediaBundle_Entity_Collection_$GEDMO_TREE_CLASSMETADATA' => 36,
'Sulu__Bundle__MediaBundle__Entity__File__CLASSMETADATA__' => 37,
'Sulu_Bundle_MediaBundle_Entity_File_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__MediaBundle__Entity__Media__CLASSMETADATA__' => 38,
'Sulu_Bundle_MediaBundle_Entity_Media_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__MediaBundle__Entity__FormatOptions__CLASSMETADATA__' => 39,
'Sulu_Bundle_MediaBundle_Entity_FormatOptions_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__SecurityBundle__Entity__AccessControl__CLASSMETADATA__' => 40,
'Sulu_Bundle_SecurityBundle_Entity_AccessControl_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__SecurityBundle__Entity__Permission__CLASSMETADATA__' => 41,
'Sulu_Bundle_SecurityBundle_Entity_Permission_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__SecurityBundle__Entity__UserRole__CLASSMETADATA__' => 42,
'Sulu_Bundle_SecurityBundle_Entity_UserRole_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__SecurityBundle__Entity__User__CLASSMETADATA__' => 43,
'Sulu_Bundle_SecurityBundle_Entity_User_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__SecurityBundle__Entity__UserSetting__CLASSMETADATA__' => 44,
'Sulu_Bundle_SecurityBundle_Entity_UserSetting_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__SecurityBundle__Entity__UserGroup__CLASSMETADATA__' => 45,
'Sulu_Bundle_SecurityBundle_Entity_UserGroup_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__SecurityBundle__Entity__SecurityType__CLASSMETADATA__' => 46,
'Sulu_Bundle_SecurityBundle_Entity_SecurityType_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__SecurityBundle__Entity__RoleSetting__CLASSMETADATA__' => 47,
'Sulu_Bundle_SecurityBundle_Entity_RoleSetting_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__SecurityBundle__Entity__Group__CLASSMETADATA__' => 48,
'Sulu_Bundle_SecurityBundle_Entity_Group_$GEDMO_TREE_CLASSMETADATA' => 49,
'Sulu__Bundle__SecurityBundle__Entity__Role__CLASSMETADATA__' => 50,
'Sulu_Bundle_SecurityBundle_Entity_Role_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__CategoryBundle__Entity__Category__CLASSMETADATA__' => 51,
'Sulu_Bundle_CategoryBundle_Entity_Category_$GEDMO_TREE_CLASSMETADATA' => 52,
'Sulu__Bundle__CategoryBundle__Entity__CategoryMeta__CLASSMETADATA__' => 53,
'Sulu_Bundle_CategoryBundle_Entity_CategoryMeta_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__CategoryBundle__Entity__CategoryTranslationMedia__CLASSMETADATA__' => 54,
'Sulu_Bundle_CategoryBundle_Entity_CategoryTranslationMedia_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__CategoryBundle__Entity__Keyword__CLASSMETADATA__' => 55,
'Sulu_Bundle_CategoryBundle_Entity_Keyword_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__CategoryBundle__Entity__CategoryTranslation__CLASSMETADATA__' => 56,
'Sulu_Bundle_CategoryBundle_Entity_CategoryTranslation_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__TagBundle__Entity__Tag__CLASSMETADATA__' => 57,
'Sulu_Bundle_TagBundle_Entity_Tag_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__WebsiteBundle__Entity__Analytics__CLASSMETADATA__' => 58,
'Sulu_Bundle_WebsiteBundle_Entity_Analytics_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__WebsiteBundle__Entity__Domain__CLASSMETADATA__' => 59,
'Sulu_Bundle_WebsiteBundle_Entity_Domain_$GEDMO_TREE_CLASSMETADATA' => 1,
'Sulu__Bundle__RouteBundle__Entity__Route__CLASSMETADATA__' => 60,
'Sulu_Bundle_RouteBundle_Entity_Route_$GEDMO_TREE_CLASSMETADATA' => 1,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\TrashBundle\\Domain\\Model\\TrashItem',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\TrashBundle\\Domain\\Model',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\TrashBundle\\Domain\\Model\\TrashItem',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'resourceKey' => [
                            'fieldName' => 'resourceKey',
                            'type' => 'string',
                            'columnName' => 'resourceKey',
                            'length' => 191,
                            'nullable' => false,
                        ],
                        'resourceId' => [
                            'fieldName' => 'resourceId',
                            'type' => 'string',
                            'columnName' => 'resourceId',
                            'length' => 191,
                            'nullable' => false,
                        ],
                        'restoreData' => [
                            'fieldName' => 'restoreData',
                            'type' => 'json',
                            'columnName' => 'restoreData',
                            'nullable' => false,
                        ],
                        'restoreType' => [
                            'fieldName' => 'restoreType',
                            'type' => 'string',
                            'columnName' => 'restoreType',
                            'length' => 191,
                            'nullable' => true,
                        ],
                        'restoreOptions' => [
                            'fieldName' => 'restoreOptions',
                            'type' => 'json',
                            'columnName' => 'restoreOptions',
                            'nullable' => false,
                        ],
                        'resourceSecurityContext' => [
                            'fieldName' => 'resourceSecurityContext',
                            'type' => 'string',
                            'columnName' => 'resourceSecurityContext',
                            'length' => 191,
                            'nullable' => true,
                        ],
                        'resourceSecurityObjectType' => [
                            'fieldName' => 'resourceSecurityObjectType',
                            'type' => 'string',
                            'columnName' => 'resourceSecurityObjectType',
                            'length' => 191,
                            'nullable' => true,
                        ],
                        'resourceSecurityObjectId' => [
                            'fieldName' => 'resourceSecurityObjectId',
                            'type' => 'string',
                            'columnName' => 'resourceSecurityObjectId',
                            'length' => 191,
                            'nullable' => true,
                        ],
                        'storeTimestamp' => [
                            'fieldName' => 'storeTimestamp',
                            'type' => 'datetime_immutable',
                            'columnName' => 'storeTimestamp',
                            'nullable' => false,
                        ],
                        'defaultLocale' => [
                            'fieldName' => 'defaultLocale',
                            'type' => 'string',
                            'columnName' => 'defaultLocale',
                            'length' => 191,
                            'nullable' => true,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'resourceKey' => 'resourceKey',
                        'resourceId' => 'resourceId',
                        'restoreData' => 'restoreData',
                        'restoreType' => 'restoreType',
                        'restoreOptions' => 'restoreOptions',
                        'resourceSecurityContext' => 'resourceSecurityContext',
                        'resourceSecurityObjectType' => 'resourceSecurityObjectType',
                        'resourceSecurityObjectId' => 'resourceSecurityObjectId',
                        'storeTimestamp' => 'storeTimestamp',
                        'defaultLocale' => 'defaultLocale',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'resourceKey' => 'resourceKey',
                        'resourceId' => 'resourceId',
                        'restoreData' => 'restoreData',
                        'restoreType' => 'restoreType',
                        'restoreOptions' => 'restoreOptions',
                        'resourceSecurityContext' => 'resourceSecurityContext',
                        'resourceSecurityObjectType' => 'resourceSecurityObjectType',
                        'resourceSecurityObjectId' => 'resourceSecurityObjectId',
                        'storeTimestamp' => 'storeTimestamp',
                        'defaultLocale' => 'defaultLocale',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'tr_trash_items',
                        'indexes' => [
                            [
                                'columns' => [
                                    'resourceKey',
                                    'resourceId',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'translations' => [
                            'fieldName' => 'translations',
                            'mappedBy' => 'trashItem',
                            'targetEntity' => 'Sulu\\Bundle\\TrashBundle\\Domain\\Model\\TrashItemTranslation',
                            'cascade' => [
                                'persist',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\TrashBundle\\Domain\\Model\\TrashItem',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'user' => [
                            'fieldName' => 'user',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'userId',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'onDelete' => 'SET NULL',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\TrashBundle\\Domain\\Model\\TrashItem',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'userId' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'userId' => 'userId',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'userId',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => [],
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\TrashBundle\\Domain\\Model\\TrashItemTranslation',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\TrashBundle\\Domain\\Model',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\TrashBundle\\Domain\\Model\\TrashItemTranslation',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'columnName' => 'locale',
                            'length' => 191,
                            'nullable' => true,
                        ],
                        'title' => [
                            'fieldName' => 'title',
                            'type' => 'string',
                            'columnName' => 'title',
                            'length' => 191,
                            'nullable' => false,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'locale' => 'locale',
                        'title' => 'title',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'locale' => 'locale',
                        'title' => 'title',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'tr_trash_item_translations',
                        'uniqueConstraints' => [
                            [
                                'columns' => [
                                    'trashItemId',
                                    'locale',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'trashItem' => [
                            'fieldName' => 'trashItem',
                            'targetEntity' => 'Sulu\\Bundle\\TrashBundle\\Domain\\Model\\TrashItem',
                            'inversedBy' => 'translations',
                            'joinColumns' => [
                                [
                                    'name' => 'trashItemId',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\TrashBundle\\Domain\\Model\\TrashItemTranslation',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'trashItemId' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'trashItemId' => 'trashItemId',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'trashItemId',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ActivityBundle\\Domain\\Model\\Activity',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ActivityBundle\\Domain\\Model',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ActivityBundle\\Domain\\Model\\Activity',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'columnName' => 'type',
                            'length' => 191,
                            'nullable' => false,
                        ],
                        'context' => [
                            'fieldName' => 'context',
                            'type' => 'json',
                            'columnName' => 'context',
                            'nullable' => false,
                        ],
                        'timestamp' => [
                            'fieldName' => 'timestamp',
                            'type' => 'datetime_immutable',
                            'columnName' => 'timestamp',
                            'nullable' => false,
                        ],
                        'batch' => [
                            'fieldName' => 'batch',
                            'type' => 'string',
                            'columnName' => 'batch',
                            'length' => 191,
                            'nullable' => true,
                        ],
                        'payload' => [
                            'fieldName' => 'payload',
                            'type' => 'json',
                            'columnName' => 'payload',
                            'nullable' => true,
                        ],
                        'resourceKey' => [
                            'fieldName' => 'resourceKey',
                            'type' => 'string',
                            'columnName' => 'resourceKey',
                            'length' => 191,
                            'nullable' => false,
                        ],
                        'resourceId' => [
                            'fieldName' => 'resourceId',
                            'type' => 'string',
                            'columnName' => 'resourceId',
                            'length' => 191,
                            'nullable' => false,
                        ],
                        'resourceLocale' => [
                            'fieldName' => 'resourceLocale',
                            'type' => 'string',
                            'columnName' => 'resourceLocale',
                            'length' => 191,
                            'nullable' => true,
                        ],
                        'resourceWebspaceKey' => [
                            'fieldName' => 'resourceWebspaceKey',
                            'type' => 'string',
                            'columnName' => 'resourceWebspaceKey',
                            'length' => 191,
                            'nullable' => true,
                        ],
                        'resourceTitle' => [
                            'fieldName' => 'resourceTitle',
                            'type' => 'string',
                            'columnName' => 'resourceTitle',
                            'length' => 191,
                            'nullable' => true,
                        ],
                        'resourceTitleLocale' => [
                            'fieldName' => 'resourceTitleLocale',
                            'type' => 'string',
                            'columnName' => 'resourceTitleLocale',
                            'length' => 191,
                            'nullable' => true,
                        ],
                        'resourceSecurityContext' => [
                            'fieldName' => 'resourceSecurityContext',
                            'type' => 'string',
                            'columnName' => 'resourceSecurityContext',
                            'length' => 191,
                            'nullable' => true,
                        ],
                        'resourceSecurityObjectType' => [
                            'fieldName' => 'resourceSecurityObjectType',
                            'type' => 'string',
                            'columnName' => 'resourceSecurityObjectType',
                            'length' => 191,
                            'nullable' => true,
                        ],
                        'resourceSecurityObjectId' => [
                            'fieldName' => 'resourceSecurityObjectId',
                            'type' => 'string',
                            'columnName' => 'resourceSecurityObjectId',
                            'length' => 191,
                            'nullable' => true,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'type' => 'type',
                        'context' => 'context',
                        'timestamp' => 'timestamp',
                        'batch' => 'batch',
                        'payload' => 'payload',
                        'resourceKey' => 'resourceKey',
                        'resourceId' => 'resourceId',
                        'resourceLocale' => 'resourceLocale',
                        'resourceWebspaceKey' => 'resourceWebspaceKey',
                        'resourceTitle' => 'resourceTitle',
                        'resourceTitleLocale' => 'resourceTitleLocale',
                        'resourceSecurityContext' => 'resourceSecurityContext',
                        'resourceSecurityObjectType' => 'resourceSecurityObjectType',
                        'resourceSecurityObjectId' => 'resourceSecurityObjectId',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'type' => 'type',
                        'context' => 'context',
                        'timestamp' => 'timestamp',
                        'batch' => 'batch',
                        'payload' => 'payload',
                        'resourceKey' => 'resourceKey',
                        'resourceId' => 'resourceId',
                        'resourceLocale' => 'resourceLocale',
                        'resourceWebspaceKey' => 'resourceWebspaceKey',
                        'resourceTitle' => 'resourceTitle',
                        'resourceTitleLocale' => 'resourceTitleLocale',
                        'resourceSecurityContext' => 'resourceSecurityContext',
                        'resourceSecurityObjectType' => 'resourceSecurityObjectType',
                        'resourceSecurityObjectId' => 'resourceSecurityObjectId',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ac_activities',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'userId',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'onDelete' => 'SET NULL',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ActivityBundle\\Domain\\Model\\Activity',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'userId' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'userId' => 'userId',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'userId',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\PreviewBundle\\Domain\\Model\\PreviewLink',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\PreviewBundle\\Domain\\Model',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\PreviewBundle\\Domain\\Model\\PreviewLink',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'token' => [
                            'fieldName' => 'token',
                            'type' => 'string',
                            'columnName' => 'token',
                            'length' => 12,
                            'unique' => true,
                        ],
                        'resourceKey' => [
                            'fieldName' => 'resourceKey',
                            'type' => 'string',
                            'columnName' => 'resourceKey',
                        ],
                        'resourceId' => [
                            'fieldName' => 'resourceId',
                            'type' => 'string',
                            'columnName' => 'resourceId',
                        ],
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'columnName' => 'locale',
                        ],
                        'options' => [
                            'fieldName' => 'options',
                            'type' => 'json',
                            'columnName' => 'options',
                        ],
                        'visitCount' => [
                            'fieldName' => 'visitCount',
                            'type' => 'integer',
                            'columnName' => 'visitCount',
                        ],
                        'lastVisit' => [
                            'fieldName' => 'lastVisit',
                            'type' => 'datetime_immutable',
                            'columnName' => 'lastVisit',
                            'nullable' => true,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'token' => 'token',
                        'resourceKey' => 'resourceKey',
                        'resourceId' => 'resourceId',
                        'locale' => 'locale',
                        'options' => 'options',
                        'visitCount' => 'visitCount',
                        'lastVisit' => 'lastVisit',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'token' => 'token',
                        'resourceKey' => 'resourceKey',
                        'resourceId' => 'resourceId',
                        'locale' => 'locale',
                        'options' => 'options',
                        'visitCount' => 'visitCount',
                        'lastVisit' => 'lastVisit',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'pr_preview_links',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\ContactLocale',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\ContactLocale',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'columnName' => 'locale',
                            'length' => 60,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'locale' => 'locale',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'locale' => 'locale',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_contact_locales',
                    ],
                ],
                'associationMappings' => [
                    [
                        'contact' => [
                            'fieldName' => 'contact',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'inversedBy' => 'locales',
                            'joinColumns' => [
                                [
                                    'name' => 'idContacts',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\ContactLocale',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idContacts' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idContacts' => 'idContacts',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idContacts',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\Email',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\Email',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'columnName' => 'email',
                            'length' => 60,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'email' => 'email',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'email' => 'email',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_emails',
                        'indexes' => [
                            [
                                'columns' => [
                                    'email',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'emailType' => [
                            'fieldName' => 'emailType',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\EmailType',
                            'inversedBy' => 'emails',
                            'joinColumns' => [
                                [
                                    'name' => 'idEmailTypes',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Email',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idEmailTypes' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idEmailTypes' => 'idEmailTypes',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idEmailTypes',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'contacts' => [
                            'fieldName' => 'contacts',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'mappedBy' => 'emails',
                            'type' => 8,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Email',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'accounts' => [
                            'fieldName' => 'accounts',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'mappedBy' => 'emails',
                            'type' => 8,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Email',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\Note',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\Note',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'value' => [
                            'fieldName' => 'value',
                            'type' => 'text',
                            'columnName' => 'value',
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'value' => 'value',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'value' => 'value',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_notes',
                    ],
                ],
                'associationMappings' => [
                    [
                        'contacts' => [
                            'fieldName' => 'contacts',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'mappedBy' => 'notes',
                            'type' => 8,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Note',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'accounts' => [
                            'fieldName' => 'accounts',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'mappedBy' => 'notes',
                            'type' => 8,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Note',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\Phone',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\Phone',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'phone' => [
                            'fieldName' => 'phone',
                            'type' => 'string',
                            'columnName' => 'phone',
                            'length' => 60,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'phone' => 'phone',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'phone' => 'phone',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_phones',
                    ],
                ],
                'associationMappings' => [
                    [
                        'phoneType' => [
                            'fieldName' => 'phoneType',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\PhoneType',
                            'inversedBy' => 'phones',
                            'joinColumns' => [
                                [
                                    'name' => 'idPhoneTypes',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Phone',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idPhoneTypes' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idPhoneTypes' => 'idPhoneTypes',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idPhoneTypes',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'contacts' => [
                            'fieldName' => 'contacts',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'mappedBy' => 'phones',
                            'type' => 8,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Phone',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'accounts' => [
                            'fieldName' => 'accounts',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'mappedBy' => 'phones',
                            'type' => 8,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Phone',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\Url',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\Url',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'url' => [
                            'fieldName' => 'url',
                            'type' => 'string',
                            'columnName' => 'url',
                            'length' => 255,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'url' => 'url',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'url' => 'url',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_urls',
                    ],
                ],
                'associationMappings' => [
                    [
                        'urlType' => [
                            'fieldName' => 'urlType',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\UrlType',
                            'inversedBy' => 'urls',
                            'joinColumns' => [
                                [
                                    'name' => 'idUrlTypes',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Url',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUrlTypes' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUrlTypes' => 'idUrlTypes',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUrlTypes',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'accounts' => [
                            'fieldName' => 'accounts',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'mappedBy' => 'urls',
                            'type' => 8,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Url',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'contacts' => [
                            'fieldName' => 'contacts',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'mappedBy' => 'urls',
                            'type' => 8,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Url',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\AccountRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'lft' => [
                            'fieldName' => 'lft',
                            'type' => 'integer',
                            'columnName' => 'lft',
                        ],
                        'rgt' => [
                            'fieldName' => 'rgt',
                            'type' => 'integer',
                            'columnName' => 'rgt',
                        ],
                        'depth' => [
                            'fieldName' => 'depth',
                            'type' => 'integer',
                            'columnName' => 'depth',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'columnName' => 'name',
                            'length' => 150,
                        ],
                        'externalId' => [
                            'fieldName' => 'externalId',
                            'type' => 'string',
                            'columnName' => 'externalId',
                            'length' => 255,
                            'nullable' => true,
                        ],
                        'number' => [
                            'fieldName' => 'number',
                            'type' => 'string',
                            'columnName' => 'number',
                            'length' => 255,
                            'nullable' => true,
                        ],
                        'corporation' => [
                            'fieldName' => 'corporation',
                            'type' => 'string',
                            'columnName' => 'corporation',
                            'length' => 255,
                            'nullable' => true,
                        ],
                        'note' => [
                            'fieldName' => 'note',
                            'type' => 'text',
                            'columnName' => 'note',
                            'nullable' => true,
                        ],
                        'uid' => [
                            'fieldName' => 'uid',
                            'type' => 'string',
                            'columnName' => 'uid',
                            'length' => 50,
                            'nullable' => true,
                        ],
                        'registerNumber' => [
                            'fieldName' => 'registerNumber',
                            'type' => 'string',
                            'columnName' => 'registerNumber',
                            'nullable' => true,
                        ],
                        'placeOfJurisdiction' => [
                            'fieldName' => 'placeOfJurisdiction',
                            'type' => 'string',
                            'columnName' => 'placeOfJurisdiction',
                            'nullable' => true,
                        ],
                        'mainEmail' => [
                            'fieldName' => 'mainEmail',
                            'type' => 'string',
                            'columnName' => 'mainEmail',
                            'nullable' => true,
                        ],
                        'mainPhone' => [
                            'fieldName' => 'mainPhone',
                            'type' => 'string',
                            'columnName' => 'mainPhone',
                            'nullable' => true,
                        ],
                        'mainFax' => [
                            'fieldName' => 'mainFax',
                            'type' => 'string',
                            'columnName' => 'mainFax',
                            'nullable' => true,
                        ],
                        'mainUrl' => [
                            'fieldName' => 'mainUrl',
                            'type' => 'string',
                            'columnName' => 'mainUrl',
                            'nullable' => true,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                        'created' => [
                            'fieldName' => 'created',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'created',
                        ],
                        'changed' => [
                            'fieldName' => 'changed',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'changed',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'lft' => 'lft',
                        'rgt' => 'rgt',
                        'depth' => 'depth',
                        'name' => 'name',
                        'externalId' => 'externalId',
                        'number' => 'number',
                        'corporation' => 'corporation',
                        'note' => 'note',
                        'uid' => 'uid',
                        'registerNumber' => 'registerNumber',
                        'placeOfJurisdiction' => 'placeOfJurisdiction',
                        'mainEmail' => 'mainEmail',
                        'mainPhone' => 'mainPhone',
                        'mainFax' => 'mainFax',
                        'mainUrl' => 'mainUrl',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'columnNames' => [
                    [
                        'lft' => 'lft',
                        'rgt' => 'rgt',
                        'depth' => 'depth',
                        'name' => 'name',
                        'externalId' => 'externalId',
                        'number' => 'number',
                        'corporation' => 'corporation',
                        'note' => 'note',
                        'uid' => 'uid',
                        'registerNumber' => 'registerNumber',
                        'placeOfJurisdiction' => 'placeOfJurisdiction',
                        'mainEmail' => 'mainEmail',
                        'mainPhone' => 'mainPhone',
                        'mainFax' => 'mainFax',
                        'mainUrl' => 'mainUrl',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_accounts',
                        'indexes' => [
                            [
                                'columns' => [
                                    'name',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'accountContacts' => [
                            'fieldName' => 'accountContacts',
                            'mappedBy' => 'account',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\AccountContact',
                            'cascade' => [
                                'persist',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'accountAddresses' => [
                            'fieldName' => 'accountAddresses',
                            'mappedBy' => 'account',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\AccountAddress',
                            'cascade' => [
                                'persist',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'urls' => [
                            'fieldName' => 'urls',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Url',
                            'inversedBy' => 'accounts',
                            'joinTable' => [
                                'name' => 'co_account_urls',
                                'joinColumns' => [
                                    [
                                        'name' => 'idAccounts',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idUrls',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idAccounts',
                                'idUrls',
                            ],
                            'relationToSourceKeyColumns' => [
                                'idAccounts' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idUrls' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'phones' => [
                            'fieldName' => 'phones',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Phone',
                            'inversedBy' => 'accounts',
                            'joinTable' => [
                                'name' => 'co_account_phones',
                                'joinColumns' => [
                                    [
                                        'name' => 'idAccounts',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idPhones',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idAccounts',
                                'idPhones',
                            ],
                            'relationToSourceKeyColumns' => [
                                'idAccounts' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idPhones' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'emails' => [
                            'fieldName' => 'emails',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Email',
                            'inversedBy' => 'accounts',
                            'joinTable' => [
                                'name' => 'co_account_emails',
                                'joinColumns' => [
                                    [
                                        'name' => 'idAccounts',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idEmails',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idAccounts',
                                'idEmails',
                            ],
                            'relationToSourceKeyColumns' => [
                                'idAccounts' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idEmails' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'notes' => [
                            'fieldName' => 'notes',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Note',
                            'inversedBy' => 'accounts',
                            'joinTable' => [
                                'name' => 'co_account_notes',
                                'joinColumns' => [
                                    [
                                        'name' => 'idAccounts',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idNotes',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idAccounts',
                                'idNotes',
                            ],
                            'relationToSourceKeyColumns' => [
                                'idAccounts' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idNotes' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'faxes' => [
                            'fieldName' => 'faxes',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Fax',
                            'inversedBy' => 'accounts',
                            'joinTable' => [
                                'name' => 'co_account_faxes',
                                'joinColumns' => [
                                    [
                                        'name' => 'idAccounts',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idFaxes',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idAccounts',
                                'idFaxes',
                            ],
                            'relationToSourceKeyColumns' => [
                                'idAccounts' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idFaxes' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'socialMediaProfiles' => [
                            'fieldName' => 'socialMediaProfiles',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\SocialMediaProfile',
                            'inversedBy' => 'accounts',
                            'joinTable' => [
                                'name' => 'co_account_social_media_profiles',
                                'joinColumns' => [
                                    [
                                        'name' => 'idAccounts',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idSocialMediaProfiles',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idAccounts',
                                'idSocialMediaProfiles',
                            ],
                            'relationToSourceKeyColumns' => [
                                'idAccounts' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idSocialMediaProfiles' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'bankAccounts' => [
                            'fieldName' => 'bankAccounts',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\BankAccount',
                            'inversedBy' => 'accounts',
                            'joinTable' => [
                                'name' => 'co_account_bank_accounts',
                                'joinColumns' => [
                                    [
                                        'name' => 'idAccounts',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idBankAccounts',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idAccounts',
                                'idBankAccounts',
                            ],
                            'relationToSourceKeyColumns' => [
                                'idAccounts' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idBankAccounts' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'children' => [
                            'fieldName' => 'children',
                            'mappedBy' => 'parent',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'mainContact' => [
                            'fieldName' => 'mainContact',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'joinColumns' => [
                                [
                                    'name' => 'idContactsMain',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'onDelete' => 'SET NULL',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idContactsMain' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idContactsMain' => 'idContactsMain',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idContactsMain',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'parent' => [
                            'fieldName' => 'parent',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'inversedBy' => 'children',
                            'joinColumns' => [
                                [
                                    'name' => 'idAccountsParent',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idAccountsParent' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idAccountsParent' => 'idAccountsParent',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idAccountsParent',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'logo' => [
                            'fieldName' => 'logo',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Media',
                            'joinColumns' => [
                                [
                                    'name' => 'logo',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'onDelete' => 'SET NULL',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'logo' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'logo' => 'logo',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'logo',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'categories' => [
                            'fieldName' => 'categories',
                            'targetEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\Category',
                            'joinTable' => [
                                'name' => 'co_account_categories',
                                'joinColumns' => [
                                    [
                                        'name' => 'idAccounts',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idCategories',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idAccounts',
                                'idCategories',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'idAccounts' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idCategories' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'medias' => [
                            'fieldName' => 'medias',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Media',
                            'joinTable' => [
                                'name' => 'co_account_medias',
                                'joinColumns' => [
                                    [
                                        'name' => 'idAccounts',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idMedias',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idAccounts',
                                'idMedias',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'idAccounts' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idMedias' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'tags' => [
                            'fieldName' => 'tags',
                            'targetEntity' => 'Sulu\\Bundle\\TagBundle\\Entity\\Tag',
                            'joinTable' => [
                                'name' => 'co_account_tags',
                                'joinColumns' => [
                                    [
                                        'name' => 'idAccounts',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idTags',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                            ],
                            'orderBy' => [
                                'name' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idAccounts',
                                'idTags',
                            ],
                            'relationToSourceKeyColumns' => [
                                'idAccounts' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idTags' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'creator' => [
                            'fieldName' => 'creator',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersCreator',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersCreator' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersCreator' => 'idUsersCreator',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersCreator',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'changer' => [
                            'fieldName' => 'changer',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersChanger',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersChanger' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersChanger' => 'idUsersChanger',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersChanger',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
11 => [
    'strategy' => 'nested',
    'activate_locking' => false,
    'locking_timeout' => 3,
    'left' => 'lft',
    'right' => 'rgt',
    'level' => 'depth',
    'parent' => 'parent',
    'useObjectClass' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
],
12 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\Address',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\Address',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\AddressRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'title' => [
                            'fieldName' => 'title',
                            'type' => 'string',
                            'columnName' => 'title',
                            'length' => 250,
                            'nullable' => true,
                        ],
                        'primaryAddress' => [
                            'fieldName' => 'primaryAddress',
                            'type' => 'boolean',
                            'columnName' => 'primaryAddress',
                            'nullable' => true,
                        ],
                        'deliveryAddress' => [
                            'fieldName' => 'deliveryAddress',
                            'type' => 'boolean',
                            'columnName' => 'deliveryAddress',
                            'nullable' => true,
                        ],
                        'billingAddress' => [
                            'fieldName' => 'billingAddress',
                            'type' => 'boolean',
                            'columnName' => 'billingAddress',
                            'nullable' => true,
                        ],
                        'street' => [
                            'fieldName' => 'street',
                            'type' => 'string',
                            'columnName' => 'street',
                            'length' => 150,
                            'nullable' => true,
                        ],
                        'number' => [
                            'fieldName' => 'number',
                            'type' => 'string',
                            'columnName' => 'number',
                            'length' => 60,
                            'nullable' => true,
                        ],
                        'addition' => [
                            'fieldName' => 'addition',
                            'type' => 'string',
                            'columnName' => 'addition',
                            'length' => 60,
                            'nullable' => true,
                        ],
                        'zip' => [
                            'fieldName' => 'zip',
                            'type' => 'string',
                            'columnName' => 'zip',
                            'length' => 60,
                            'nullable' => true,
                        ],
                        'city' => [
                            'fieldName' => 'city',
                            'type' => 'string',
                            'columnName' => 'city',
                            'length' => 60,
                            'nullable' => true,
                        ],
                        'state' => [
                            'fieldName' => 'state',
                            'type' => 'string',
                            'columnName' => 'state',
                            'length' => 60,
                            'nullable' => true,
                        ],
                        'countryCode' => [
                            'fieldName' => 'countryCode',
                            'type' => 'string',
                            'columnName' => 'countryCode',
                            'length' => 5,
                            'nullable' => true,
                        ],
                        'postboxNumber' => [
                            'fieldName' => 'postboxNumber',
                            'type' => 'string',
                            'columnName' => 'postboxNumber',
                            'length' => 100,
                            'nullable' => true,
                        ],
                        'postboxPostcode' => [
                            'fieldName' => 'postboxPostcode',
                            'type' => 'string',
                            'columnName' => 'postboxPostcode',
                            'length' => 100,
                            'nullable' => true,
                        ],
                        'postboxCity' => [
                            'fieldName' => 'postboxCity',
                            'type' => 'string',
                            'columnName' => 'postboxCity',
                            'length' => 100,
                            'nullable' => true,
                        ],
                        'latitude' => [
                            'fieldName' => 'latitude',
                            'type' => 'float',
                            'columnName' => 'latitude',
                            'nullable' => true,
                        ],
                        'longitude' => [
                            'fieldName' => 'longitude',
                            'type' => 'float',
                            'columnName' => 'longitude',
                            'nullable' => true,
                        ],
                        'note' => [
                            'fieldName' => 'note',
                            'type' => 'text',
                            'columnName' => 'note',
                            'nullable' => true,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'title' => 'title',
                        'primaryAddress' => 'primaryAddress',
                        'deliveryAddress' => 'deliveryAddress',
                        'billingAddress' => 'billingAddress',
                        'street' => 'street',
                        'number' => 'number',
                        'addition' => 'addition',
                        'zip' => 'zip',
                        'city' => 'city',
                        'state' => 'state',
                        'countryCode' => 'countryCode',
                        'postboxNumber' => 'postboxNumber',
                        'postboxPostcode' => 'postboxPostcode',
                        'postboxCity' => 'postboxCity',
                        'latitude' => 'latitude',
                        'longitude' => 'longitude',
                        'note' => 'note',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'title' => 'title',
                        'primaryAddress' => 'primaryAddress',
                        'deliveryAddress' => 'deliveryAddress',
                        'billingAddress' => 'billingAddress',
                        'street' => 'street',
                        'number' => 'number',
                        'addition' => 'addition',
                        'zip' => 'zip',
                        'city' => 'city',
                        'state' => 'state',
                        'countryCode' => 'countryCode',
                        'postboxNumber' => 'postboxNumber',
                        'postboxPostcode' => 'postboxPostcode',
                        'postboxCity' => 'postboxCity',
                        'latitude' => 'latitude',
                        'longitude' => 'longitude',
                        'note' => 'note',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_addresses',
                    ],
                ],
                'associationMappings' => [
                    [
                        'contactAddresses' => [
                            'fieldName' => 'contactAddresses',
                            'mappedBy' => 'address',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\ContactAddress',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Address',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'accountAddresses' => [
                            'fieldName' => 'accountAddresses',
                            'mappedBy' => 'address',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\AccountAddress',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Address',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'addressType' => [
                            'fieldName' => 'addressType',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\AddressType',
                            'inversedBy' => 'addresses',
                            'joinColumns' => [
                                [
                                    'name' => 'idAdressTypes',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Address',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idAdressTypes' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idAdressTypes' => 'idAdressTypes',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idAdressTypes',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
13 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\SocialMediaProfileType',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\SocialMediaProfileType',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\SocialMediaProfileTypeRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'columnName' => 'name',
                            'length' => 100,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'name' => 'name',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'name' => 'name',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_social_media_profile_types',
                    ],
                ],
                'associationMappings' => [
                    [
                        'socialMediaProfiles' => [
                            'fieldName' => 'socialMediaProfiles',
                            'mappedBy' => 'socialMediaProfileType',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\SocialMediaProfile',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\SocialMediaProfileType',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
14 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\PhoneType',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\PhoneType',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\PhoneTypeRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'columnName' => 'name',
                            'length' => 60,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'name' => 'name',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'name' => 'name',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_phone_types',
                    ],
                ],
                'associationMappings' => [
                    [
                        'phones' => [
                            'fieldName' => 'phones',
                            'mappedBy' => 'phoneType',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Phone',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\PhoneType',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
15 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\SocialMediaProfile',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\SocialMediaProfile',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'username' => [
                            'fieldName' => 'username',
                            'type' => 'string',
                            'columnName' => 'username',
                            'length' => 255,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'username' => 'username',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'username' => 'username',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_social_media_profiles',
                    ],
                ],
                'associationMappings' => [
                    [
                        'socialMediaProfileType' => [
                            'fieldName' => 'socialMediaProfileType',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\SocialMediaProfileType',
                            'inversedBy' => 'socialMediaProfiles',
                            'joinColumns' => [
                                [
                                    'name' => 'idSocialMediaTypes',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\SocialMediaProfile',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idSocialMediaTypes' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idSocialMediaTypes' => 'idSocialMediaTypes',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idSocialMediaTypes',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'contacts' => [
                            'fieldName' => 'contacts',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'mappedBy' => 'socialMediaProfiles',
                            'type' => 8,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\SocialMediaProfile',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'accounts' => [
                            'fieldName' => 'accounts',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'mappedBy' => 'socialMediaProfiles',
                            'type' => 8,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\SocialMediaProfile',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
16 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\UrlType',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\UrlType',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\UrlTypeRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'columnName' => 'name',
                            'length' => 60,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'name' => 'name',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'name' => 'name',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_url_types',
                    ],
                ],
                'associationMappings' => [
                    [
                        'urls' => [
                            'fieldName' => 'urls',
                            'mappedBy' => 'urlType',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Url',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\UrlType',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
17 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\AddressType',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\AddressType',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\AddressTypeRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'columnName' => 'name',
                            'length' => 60,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'name' => 'name',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'name' => 'name',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_address_types',
                    ],
                ],
                'associationMappings' => [
                    [
                        'addresses' => [
                            'fieldName' => 'addresses',
                            'mappedBy' => 'addressType',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Address',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\AddressType',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
18 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\ContactTitle',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\ContactTitle',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\ContactTitleRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'title' => [
                            'fieldName' => 'title',
                            'type' => 'string',
                            'columnName' => 'title',
                            'length' => 60,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'title' => 'title',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'title' => 'title',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_contact_titles',
                        'uniqueConstraints' => [
                            [
                                'columns' => [
                                    'title',
                                ],
                            ],
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
19 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\Position',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\Position',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\PositionRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'position' => [
                            'fieldName' => 'position',
                            'type' => 'string',
                            'columnName' => 'position',
                            'length' => 191,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'position' => 'position',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'position' => 'position',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_positions',
                        'uniqueConstraints' => [
                            [
                                'columns' => [
                                    'position',
                                ],
                            ],
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
20 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\ContactAddress',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\ContactAddress',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\ContactAddressRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'main' => [
                            'fieldName' => 'main',
                            'type' => 'boolean',
                            'columnName' => 'main',
                            'nullable' => false,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'main' => 'main',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'main' => 'main',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_contact_addresses',
                        'uniqueConstraints' => [
                            [
                                'columns' => [
                                    'idAddresses',
                                    'idContacts',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'address' => [
                            'fieldName' => 'address',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Address',
                            'inversedBy' => 'contactAddresses',
                            'joinColumns' => [
                                [
                                    'name' => 'idAddresses',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\ContactAddress',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idAddresses' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idAddresses' => 'idAddresses',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idAddresses',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'contact' => [
                            'fieldName' => 'contact',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'inversedBy' => 'contactAddresses',
                            'joinColumns' => [
                                [
                                    'name' => 'idContacts',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\ContactAddress',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idContacts' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idContacts' => 'idContacts',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idContacts',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
21 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\ContactRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'firstName' => [
                            'fieldName' => 'firstName',
                            'type' => 'string',
                            'columnName' => 'firstName',
                            'length' => 60,
                        ],
                        'middleName' => [
                            'fieldName' => 'middleName',
                            'type' => 'string',
                            'columnName' => 'middleName',
                            'length' => 60,
                            'nullable' => true,
                        ],
                        'lastName' => [
                            'fieldName' => 'lastName',
                            'type' => 'string',
                            'columnName' => 'lastName',
                            'length' => 60,
                        ],
                        'birthday' => [
                            'fieldName' => 'birthday',
                            'type' => 'date',
                            'columnName' => 'birthday',
                            'nullable' => true,
                        ],
                        'salutation' => [
                            'fieldName' => 'salutation',
                            'type' => 'string',
                            'columnName' => 'salutation',
                            'length' => 255,
                            'nullable' => true,
                        ],
                        'formOfAddress' => [
                            'fieldName' => 'formOfAddress',
                            'type' => 'integer',
                            'columnName' => 'formOfAddress',
                            'nullable' => true,
                        ],
                        'newsletter' => [
                            'fieldName' => 'newsletter',
                            'type' => 'boolean',
                            'columnName' => 'newsletter',
                            'nullable' => true,
                        ],
                        'gender' => [
                            'fieldName' => 'gender',
                            'type' => 'string',
                            'columnName' => 'gender',
                            'length' => 1,
                            'nullable' => true,
                        ],
                        'note' => [
                            'fieldName' => 'note',
                            'type' => 'text',
                            'columnName' => 'note',
                            'nullable' => true,
                        ],
                        'mainEmail' => [
                            'fieldName' => 'mainEmail',
                            'type' => 'string',
                            'columnName' => 'mainEmail',
                            'nullable' => true,
                        ],
                        'mainPhone' => [
                            'fieldName' => 'mainPhone',
                            'type' => 'string',
                            'columnName' => 'mainPhone',
                            'nullable' => true,
                        ],
                        'mainFax' => [
                            'fieldName' => 'mainFax',
                            'type' => 'string',
                            'columnName' => 'mainFax',
                            'nullable' => true,
                        ],
                        'mainUrl' => [
                            'fieldName' => 'mainUrl',
                            'type' => 'string',
                            'columnName' => 'mainUrl',
                            'nullable' => true,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                        'created' => [
                            'fieldName' => 'created',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'created',
                        ],
                        'changed' => [
                            'fieldName' => 'changed',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'changed',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'firstName' => 'firstName',
                        'middleName' => 'middleName',
                        'lastName' => 'lastName',
                        'birthday' => 'birthday',
                        'salutation' => 'salutation',
                        'formOfAddress' => 'formOfAddress',
                        'newsletter' => 'newsletter',
                        'gender' => 'gender',
                        'note' => 'note',
                        'mainEmail' => 'mainEmail',
                        'mainPhone' => 'mainPhone',
                        'mainFax' => 'mainFax',
                        'mainUrl' => 'mainUrl',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'columnNames' => [
                    [
                        'firstName' => 'firstName',
                        'middleName' => 'middleName',
                        'lastName' => 'lastName',
                        'birthday' => 'birthday',
                        'salutation' => 'salutation',
                        'formOfAddress' => 'formOfAddress',
                        'newsletter' => 'newsletter',
                        'gender' => 'gender',
                        'note' => 'note',
                        'mainEmail' => 'mainEmail',
                        'mainPhone' => 'mainPhone',
                        'mainFax' => 'mainFax',
                        'mainUrl' => 'mainUrl',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_contacts',
                        'indexes' => [
                            [
                                'columns' => [
                                    'firstName',
                                ],
                            ],
                            [
                                'columns' => [
                                    'lastName',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'locales' => [
                            'fieldName' => 'locales',
                            'mappedBy' => 'contact',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\ContactLocale',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'contactAddresses' => [
                            'fieldName' => 'contactAddresses',
                            'mappedBy' => 'contact',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\ContactAddress',
                            'cascade' => [
                                'persist',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'accountContacts' => [
                            'fieldName' => 'accountContacts',
                            'mappedBy' => 'contact',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\AccountContact',
                            'cascade' => [
                                'persist',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'title' => [
                            'fieldName' => 'title',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\ContactTitle',
                            'joinColumns' => [
                                [
                                    'name' => 'idTitles',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'onDelete' => 'SET NULL',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idTitles' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idTitles' => 'idTitles',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idTitles',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'urls' => [
                            'fieldName' => 'urls',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Url',
                            'inversedBy' => 'contacts',
                            'joinTable' => [
                                'name' => 'co_contact_urls',
                                'joinColumns' => [
                                    [
                                        'name' => 'idContacts',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idUrls',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idContacts',
                                'idUrls',
                            ],
                            'relationToSourceKeyColumns' => [
                                'idContacts' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idUrls' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'notes' => [
                            'fieldName' => 'notes',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Note',
                            'inversedBy' => 'contacts',
                            'joinTable' => [
                                'name' => 'co_contact_notes',
                                'joinColumns' => [
                                    [
                                        'name' => 'idContacts',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idNotes',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idContacts',
                                'idNotes',
                            ],
                            'relationToSourceKeyColumns' => [
                                'idContacts' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idNotes' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'emails' => [
                            'fieldName' => 'emails',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Email',
                            'inversedBy' => 'contacts',
                            'joinTable' => [
                                'name' => 'co_contact_emails',
                                'joinColumns' => [
                                    [
                                        'name' => 'idContacts',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idEmails',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idContacts',
                                'idEmails',
                            ],
                            'relationToSourceKeyColumns' => [
                                'idContacts' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idEmails' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'phones' => [
                            'fieldName' => 'phones',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Phone',
                            'inversedBy' => 'contacts',
                            'joinTable' => [
                                'name' => 'co_contact_phones',
                                'joinColumns' => [
                                    [
                                        'name' => 'idContacts',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idPhones',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idContacts',
                                'idPhones',
                            ],
                            'relationToSourceKeyColumns' => [
                                'idContacts' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idPhones' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'faxes' => [
                            'fieldName' => 'faxes',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Fax',
                            'inversedBy' => 'contacts',
                            'joinTable' => [
                                'name' => 'co_contact_faxes',
                                'joinColumns' => [
                                    [
                                        'name' => 'idContacts',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idFaxes',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idContacts',
                                'idFaxes',
                            ],
                            'relationToSourceKeyColumns' => [
                                'idContacts' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idFaxes' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'socialMediaProfiles' => [
                            'fieldName' => 'socialMediaProfiles',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\SocialMediaProfile',
                            'inversedBy' => 'contacts',
                            'joinTable' => [
                                'name' => 'co_contact_social_media_profiles',
                                'joinColumns' => [
                                    [
                                        'name' => 'idContacts',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idSocialMediaProfiles',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idContacts',
                                'idSocialMediaProfiles',
                            ],
                            'relationToSourceKeyColumns' => [
                                'idContacts' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idSocialMediaProfiles' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'bankAccounts' => [
                            'fieldName' => 'bankAccounts',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\BankAccount',
                            'inversedBy' => 'contacts',
                            'joinTable' => [
                                'name' => 'co_contact_bank_accounts',
                                'joinColumns' => [
                                    [
                                        'name' => 'idContacts',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idBankAccounts',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idContacts',
                                'idBankAccounts',
                            ],
                            'relationToSourceKeyColumns' => [
                                'idContacts' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idBankAccounts' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'avatar' => [
                            'fieldName' => 'avatar',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Media',
                            'joinColumns' => [
                                [
                                    'name' => 'avatar',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'onDelete' => 'SET NULL',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'avatar' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'avatar' => 'avatar',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'avatar',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'medias' => [
                            'fieldName' => 'medias',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Media',
                            'joinTable' => [
                                'name' => 'co_contact_medias',
                                'joinColumns' => [
                                    [
                                        'name' => 'idContacts',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idMedias',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idContacts',
                                'idMedias',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'idContacts' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idMedias' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'categories' => [
                            'fieldName' => 'categories',
                            'targetEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\Category',
                            'joinTable' => [
                                'name' => 'co_contact_categories',
                                'joinColumns' => [
                                    [
                                        'name' => 'idContacts',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idCategories',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idContacts',
                                'idCategories',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'idContacts' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idCategories' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'tags' => [
                            'fieldName' => 'tags',
                            'targetEntity' => 'Sulu\\Bundle\\TagBundle\\Entity\\Tag',
                            'joinTable' => [
                                'name' => 'co_contact_tags',
                                'joinColumns' => [
                                    [
                                        'name' => 'idContacts',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idTags',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                            ],
                            'orderBy' => [
                                'name' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idContacts',
                                'idTags',
                            ],
                            'relationToSourceKeyColumns' => [
                                'idContacts' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idTags' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'creator' => [
                            'fieldName' => 'creator',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersCreator',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersCreator' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersCreator' => 'idUsersCreator',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersCreator',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'changer' => [
                            'fieldName' => 'changer',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersChanger',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersChanger' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersChanger' => 'idUsersChanger',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersChanger',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
22 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\AccountAddress',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\AccountAddress',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\AccountAddressRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'main' => [
                            'fieldName' => 'main',
                            'type' => 'boolean',
                            'columnName' => 'main',
                            'nullable' => false,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'main' => 'main',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'main' => 'main',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_account_addresses',
                        'uniqueConstraints' => [
                            [
                                'columns' => [
                                    'idAddresses',
                                    'idAccounts',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'address' => [
                            'fieldName' => 'address',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Address',
                            'inversedBy' => 'accountAddresses',
                            'joinColumns' => [
                                [
                                    'name' => 'idAddresses',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\AccountAddress',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idAddresses' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idAddresses' => 'idAddresses',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idAddresses',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'account' => [
                            'fieldName' => 'account',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'inversedBy' => 'accountAddresses',
                            'joinColumns' => [
                                [
                                    'name' => 'idAccounts',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\AccountAddress',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idAccounts' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idAccounts' => 'idAccounts',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idAccounts',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
23 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\Fax',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\Fax',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'fax' => [
                            'fieldName' => 'fax',
                            'type' => 'string',
                            'columnName' => 'fax',
                            'length' => 255,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'fax' => 'fax',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'fax' => 'fax',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_faxes',
                    ],
                ],
                'associationMappings' => [
                    [
                        'faxType' => [
                            'fieldName' => 'faxType',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\FaxType',
                            'inversedBy' => 'faxes',
                            'joinColumns' => [
                                [
                                    'name' => 'idFaxTypes',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Fax',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idFaxTypes' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idFaxTypes' => 'idFaxTypes',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idFaxTypes',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'contacts' => [
                            'fieldName' => 'contacts',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'mappedBy' => 'faxes',
                            'type' => 8,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Fax',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'accounts' => [
                            'fieldName' => 'accounts',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'mappedBy' => 'faxes',
                            'type' => 8,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Fax',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
24 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\AccountContact',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\AccountContact',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\AccountContactRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'main' => [
                            'fieldName' => 'main',
                            'type' => 'boolean',
                            'columnName' => 'main',
                            'nullable' => false,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'main' => 'main',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'main' => 'main',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_account_contacts',
                        'uniqueConstraints' => [
                            [
                                'columns' => [
                                    'idContacts',
                                    'idAccounts',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'position' => [
                            'fieldName' => 'position',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Position',
                            'joinColumns' => [
                                [
                                    'name' => 'idPositions',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'onDelete' => 'SET NULL',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\AccountContact',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idPositions' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idPositions' => 'idPositions',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idPositions',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'contact' => [
                            'fieldName' => 'contact',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'inversedBy' => 'accountContacts',
                            'joinColumns' => [
                                [
                                    'name' => 'idContacts',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\AccountContact',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idContacts' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idContacts' => 'idContacts',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idContacts',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'account' => [
                            'fieldName' => 'account',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'inversedBy' => 'accountContacts',
                            'joinColumns' => [
                                [
                                    'name' => 'idAccounts',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\AccountContact',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idAccounts' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idAccounts' => 'idAccounts',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idAccounts',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
25 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\EmailType',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\EmailType',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\EmailTypeRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'columnName' => 'name',
                            'length' => 60,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'name' => 'name',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'name' => 'name',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_email_types',
                    ],
                ],
                'associationMappings' => [
                    [
                        'emails' => [
                            'fieldName' => 'emails',
                            'mappedBy' => 'emailType',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Email',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\EmailType',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
26 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\FaxType',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\FaxType',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\FaxTypeRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'columnName' => 'name',
                            'length' => 60,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'name' => 'name',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'name' => 'name',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_fax_types',
                    ],
                ],
                'associationMappings' => [
                    [
                        'faxes' => [
                            'fieldName' => 'faxes',
                            'mappedBy' => 'faxType',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Fax',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\FaxType',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
27 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\BankAccount',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\ContactBundle\\Entity\\BankAccount',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'bankName' => [
                            'fieldName' => 'bankName',
                            'type' => 'string',
                            'columnName' => 'bankName',
                            'length' => 150,
                            'nullable' => true,
                        ],
                        'bic' => [
                            'fieldName' => 'bic',
                            'type' => 'string',
                            'columnName' => 'bic',
                            'length' => 100,
                            'nullable' => true,
                        ],
                        'iban' => [
                            'fieldName' => 'iban',
                            'type' => 'string',
                            'columnName' => 'iban',
                            'length' => 100,
                        ],
                        'public' => [
                            'fieldName' => 'public',
                            'type' => 'boolean',
                            'columnName' => 'public',
                            'nullable' => false,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'bankName' => 'bankName',
                        'bic' => 'bic',
                        'iban' => 'iban',
                        'public' => 'public',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'bankName' => 'bankName',
                        'bic' => 'bic',
                        'iban' => 'iban',
                        'public' => 'public',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'co_bank_account',
                    ],
                ],
                'associationMappings' => [
                    [
                        'accounts' => [
                            'fieldName' => 'accounts',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Account',
                            'mappedBy' => 'bankAccounts',
                            'type' => 8,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\BankAccount',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'contacts' => [
                            'fieldName' => 'contacts',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'mappedBy' => 'bankAccounts',
                            'type' => 8,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\BankAccount',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
28 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersionPublishLanguage',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersionPublishLanguage',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'columnName' => 'locale',
                            'length' => 5,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'locale' => 'locale',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'locale' => 'locale',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'me_file_version_publish_languages',
                    ],
                ],
                'associationMappings' => [
                    [
                        'fileVersion' => [
                            'fieldName' => 'fileVersion',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion',
                            'inversedBy' => 'publishLanguages',
                            'joinColumns' => [
                                [
                                    'name' => 'idFileVersions',
                                    'referencedColumnName' => 'id',
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersionPublishLanguage',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idFileVersions' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idFileVersions' => 'idFileVersions',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idFileVersions',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
29 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\MediaType',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\MediaType',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'columnName' => 'name',
                            'length' => 191,
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'columnName' => 'description',
                            'nullable' => true,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'name' => 'name',
                        'description' => 'description',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'name' => 'name',
                        'description' => 'description',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'me_media_types',
                        'indexes' => [
                            [
                                'columns' => [
                                    'name',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'media' => [
                            'fieldName' => 'media',
                            'mappedBy' => 'type',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Media',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\MediaType',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
30 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersionContentLanguage',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersionContentLanguage',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'columnName' => 'locale',
                            'length' => 5,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'locale' => 'locale',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'locale' => 'locale',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'me_file_version_content_languages',
                    ],
                ],
                'associationMappings' => [
                    [
                        'fileVersion' => [
                            'fieldName' => 'fileVersion',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion',
                            'inversedBy' => 'contentLanguages',
                            'joinColumns' => [
                                [
                                    'name' => 'idFileVersions',
                                    'referencedColumnName' => 'id',
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersionContentLanguage',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idFileVersions' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idFileVersions' => 'idFileVersions',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idFileVersions',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
31 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\CollectionMeta',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\CollectionMeta',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'title' => [
                            'fieldName' => 'title',
                            'type' => 'string',
                            'columnName' => 'title',
                            'length' => 191,
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'columnName' => 'description',
                            'nullable' => true,
                        ],
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'columnName' => 'locale',
                            'length' => 5,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'title' => 'title',
                        'description' => 'description',
                        'locale' => 'locale',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'title' => 'title',
                        'description' => 'description',
                        'locale' => 'locale',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'me_collection_meta',
                        'indexes' => [
                            [
                                'columns' => [
                                    'title',
                                ],
                            ],
                            [
                                'columns' => [
                                    'locale',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'collection' => [
                            'fieldName' => 'collection',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Collection',
                            'inversedBy' => 'meta',
                            'joinColumns' => [
                                [
                                    'name' => 'idCollections',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\CollectionMeta',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idCollections' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idCollections' => 'idCollections',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idCollections',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
32 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\CollectionType',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\CollectionType',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'columnName' => 'name',
                            'length' => 255,
                        ],
                        'key' => [
                            'fieldName' => 'key',
                            'type' => 'string',
                            'columnName' => 'collection_type_key',
                            'length' => 191,
                            'unique' => true,
                            'nullable' => true,
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'columnName' => 'description',
                            'nullable' => true,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'name' => 'name',
                        'collection_type_key' => 'key',
                        'description' => 'description',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'name' => 'name',
                        'key' => 'collection_type_key',
                        'description' => 'description',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'me_collection_types',
                    ],
                ],
                'associationMappings' => [
                    [
                        'collections' => [
                            'fieldName' => 'collections',
                            'mappedBy' => 'type',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Collection',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\CollectionType',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
33 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'columnName' => 'name',
                            'length' => 191,
                        ],
                        'version' => [
                            'fieldName' => 'version',
                            'type' => 'integer',
                            'columnName' => 'version',
                        ],
                        'subVersion' => [
                            'fieldName' => 'subVersion',
                            'type' => 'integer',
                            'columnName' => 'subVersion',
                            'options' => [
                                'default' => '0',
                            ],
                        ],
                        'size' => [
                            'fieldName' => 'size',
                            'type' => 'integer',
                            'columnName' => 'size',
                        ],
                        'downloadCounter' => [
                            'fieldName' => 'downloadCounter',
                            'type' => 'integer',
                            'columnName' => 'downloadCounter',
                            'options' => [
                                'default' => '0',
                            ],
                        ],
                        'storageOptions' => [
                            'fieldName' => 'storageOptions',
                            'type' => 'text',
                            'columnName' => 'storageOptions',
                            'nullable' => true,
                        ],
                        'mimeType' => [
                            'fieldName' => 'mimeType',
                            'type' => 'string',
                            'columnName' => 'mimeType',
                            'length' => 191,
                            'nullable' => true,
                        ],
                        'properties' => [
                            'fieldName' => 'properties',
                            'type' => 'string',
                            'columnName' => 'properties',
                            'length' => 1000,
                            'nullable' => true,
                        ],
                        'focusPointX' => [
                            'fieldName' => 'focusPointX',
                            'type' => 'integer',
                            'columnName' => 'focusPointX',
                            'nullable' => true,
                        ],
                        'focusPointY' => [
                            'fieldName' => 'focusPointY',
                            'type' => 'integer',
                            'columnName' => 'focusPointY',
                            'nullable' => true,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                        'created' => [
                            'fieldName' => 'created',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'created',
                        ],
                        'changed' => [
                            'fieldName' => 'changed',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'changed',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'name' => 'name',
                        'version' => 'version',
                        'subVersion' => 'subVersion',
                        'size' => 'size',
                        'downloadCounter' => 'downloadCounter',
                        'storageOptions' => 'storageOptions',
                        'mimeType' => 'mimeType',
                        'properties' => 'properties',
                        'focusPointX' => 'focusPointX',
                        'focusPointY' => 'focusPointY',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'columnNames' => [
                    [
                        'name' => 'name',
                        'version' => 'version',
                        'subVersion' => 'subVersion',
                        'size' => 'size',
                        'downloadCounter' => 'downloadCounter',
                        'storageOptions' => 'storageOptions',
                        'mimeType' => 'mimeType',
                        'properties' => 'properties',
                        'focusPointX' => 'focusPointX',
                        'focusPointY' => 'focusPointY',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'me_file_versions',
                        'indexes' => [
                            [
                                'columns' => [
                                    'mimeType',
                                ],
                            ],
                            [
                                'columns' => [
                                    'size',
                                ],
                            ],
                            [
                                'columns' => [
                                    'version',
                                ],
                            ],
                            [
                                'columns' => [
                                    'name',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'defaultMeta' => [
                            'fieldName' => 'defaultMeta',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersionMeta',
                            'joinColumns' => [
                                [
                                    'name' => 'idFileVersionsMetaDefault',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'onDelete' => 'CASCADE',
                                    'unique' => true,
                                ],
                            ],
                            'cascade' => [
                                'remove',
                                'persist',
                                'refresh',
                                'merge',
                                'detach',
                            ],
                            'type' => 1,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion',
                            'fetch' => 2,
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => true,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'idFileVersionsMetaDefault' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idFileVersionsMetaDefault' => 'idFileVersionsMetaDefault',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idFileVersionsMetaDefault',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'contentLanguages' => [
                            'fieldName' => 'contentLanguages',
                            'mappedBy' => 'fileVersion',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersionContentLanguage',
                            'cascade' => [
                                'persist',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'publishLanguages' => [
                            'fieldName' => 'publishLanguages',
                            'mappedBy' => 'fileVersion',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersionPublishLanguage',
                            'cascade' => [
                                'persist',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'meta' => [
                            'fieldName' => 'meta',
                            'mappedBy' => 'fileVersion',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersionMeta',
                            'cascade' => [
                                'persist',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'formatOptions' => [
                            'fieldName' => 'formatOptions',
                            'mappedBy' => 'fileVersion',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FormatOptions',
                            'cascade' => [
                                'persist',
                            ],
                            'indexBy' => 'formatKey',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'file' => [
                            'fieldName' => 'file',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\File',
                            'inversedBy' => 'fileVersions',
                            'joinColumns' => [
                                [
                                    'name' => 'idFiles',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idFiles' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idFiles' => 'idFiles',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idFiles',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'tags' => [
                            'fieldName' => 'tags',
                            'targetEntity' => 'Sulu\\Bundle\\TagBundle\\Entity\\Tag',
                            'joinTable' => [
                                'name' => 'me_file_version_tags',
                                'joinColumns' => [
                                    [
                                        'name' => 'idFileVersions',
                                        'referencedColumnName' => 'id',
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idTags',
                                        'referencedColumnName' => 'id',
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idFileVersions',
                                'idTags',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'idFileVersions' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idTags' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'categories' => [
                            'fieldName' => 'categories',
                            'targetEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\Category',
                            'joinTable' => [
                                'name' => 'me_file_version_categories',
                                'joinColumns' => [
                                    [
                                        'name' => 'idFileVersions',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idCategories',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idFileVersions',
                                'idCategories',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'idFileVersions' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idCategories' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'creator' => [
                            'fieldName' => 'creator',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersCreator',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersCreator' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersCreator' => 'idUsersCreator',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersCreator',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'changer' => [
                            'fieldName' => 'changer',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersChanger',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersChanger' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersChanger' => 'idUsersChanger',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersChanger',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
34 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersionMeta',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersionMeta',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersionMetaRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'title' => [
                            'fieldName' => 'title',
                            'type' => 'string',
                            'columnName' => 'title',
                            'length' => 191,
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'columnName' => 'description',
                            'nullable' => true,
                        ],
                        'copyright' => [
                            'fieldName' => 'copyright',
                            'type' => 'text',
                            'columnName' => 'copyright',
                            'nullable' => true,
                        ],
                        'credits' => [
                            'fieldName' => 'credits',
                            'type' => 'text',
                            'columnName' => 'credits',
                            'nullable' => true,
                        ],
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'columnName' => 'locale',
                            'length' => 5,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'title' => 'title',
                        'description' => 'description',
                        'copyright' => 'copyright',
                        'credits' => 'credits',
                        'locale' => 'locale',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'title' => 'title',
                        'description' => 'description',
                        'copyright' => 'copyright',
                        'credits' => 'credits',
                        'locale' => 'locale',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'me_file_version_meta',
                        'indexes' => [
                            [
                                'columns' => [
                                    'title',
                                ],
                            ],
                            [
                                'columns' => [
                                    'locale',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'fileVersion' => [
                            'fieldName' => 'fileVersion',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion',
                            'inversedBy' => 'meta',
                            'joinColumns' => [
                                [
                                    'name' => 'idFileVersions',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersionMeta',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idFileVersions' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idFileVersions' => 'idFileVersions',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idFileVersions',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
35 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\Collection',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\Collection',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\CollectionRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'style' => [
                            'fieldName' => 'style',
                            'type' => 'string',
                            'columnName' => 'style',
                            'length' => 255,
                            'nullable' => true,
                        ],
                        'lft' => [
                            'fieldName' => 'lft',
                            'type' => 'integer',
                            'columnName' => 'lft',
                        ],
                        'rgt' => [
                            'fieldName' => 'rgt',
                            'type' => 'integer',
                            'columnName' => 'rgt',
                        ],
                        'depth' => [
                            'fieldName' => 'depth',
                            'type' => 'integer',
                            'columnName' => 'depth',
                        ],
                        'key' => [
                            'fieldName' => 'key',
                            'type' => 'string',
                            'columnName' => 'collection_key',
                            'length' => 191,
                            'unique' => true,
                            'nullable' => true,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                        'created' => [
                            'fieldName' => 'created',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'created',
                        ],
                        'changed' => [
                            'fieldName' => 'changed',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'changed',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'style' => 'style',
                        'lft' => 'lft',
                        'rgt' => 'rgt',
                        'depth' => 'depth',
                        'collection_key' => 'key',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'columnNames' => [
                    [
                        'style' => 'style',
                        'lft' => 'lft',
                        'rgt' => 'rgt',
                        'depth' => 'depth',
                        'key' => 'collection_key',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'me_collections',
                    ],
                ],
                'associationMappings' => [
                    [
                        'defaultMeta' => [
                            'fieldName' => 'defaultMeta',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\CollectionMeta',
                            'joinColumns' => [
                                [
                                    'name' => 'idCollectionsMetaDefault',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'onDelete' => 'CASCADE',
                                    'unique' => true,
                                ],
                            ],
                            'cascade' => [
                                'remove',
                                'persist',
                                'refresh',
                                'merge',
                                'detach',
                            ],
                            'type' => 1,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Collection',
                            'fetch' => 2,
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => true,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'idCollectionsMetaDefault' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idCollectionsMetaDefault' => 'idCollectionsMetaDefault',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idCollectionsMetaDefault',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'meta' => [
                            'fieldName' => 'meta',
                            'mappedBy' => 'collection',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\CollectionMeta',
                            'cascade' => [
                                'persist',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Collection',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\CollectionType',
                            'inversedBy' => 'collections',
                            'joinColumns' => [
                                [
                                    'name' => 'idCollectionTypes',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Collection',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idCollectionTypes' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idCollectionTypes' => 'idCollectionTypes',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idCollectionTypes',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'parent' => [
                            'fieldName' => 'parent',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Collection',
                            'inversedBy' => 'children',
                            'joinColumns' => [
                                [
                                    'name' => 'idCollectionsParent',
                                    'referencedColumnName' => 'id',
                                    'onDelete' => 'SET NULL',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Collection',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idCollectionsParent' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idCollectionsParent' => 'idCollectionsParent',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idCollectionsParent',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'media' => [
                            'fieldName' => 'media',
                            'mappedBy' => 'collection',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Media',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Collection',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'children' => [
                            'fieldName' => 'children',
                            'mappedBy' => 'parent',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Collection',
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Collection',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'creator' => [
                            'fieldName' => 'creator',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersCreator',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Collection',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersCreator' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersCreator' => 'idUsersCreator',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersCreator',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'changer' => [
                            'fieldName' => 'changer',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersChanger',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Collection',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersChanger' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersChanger' => 'idUsersChanger',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersChanger',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
36 => [
    'strategy' => 'nested',
    'activate_locking' => false,
    'locking_timeout' => 3,
    'left' => 'lft',
    'right' => 'rgt',
    'level' => 'depth',
    'parent' => 'parent',
    'useObjectClass' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Collection',
],
37 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\File',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\File',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\FileRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'version' => [
                            'fieldName' => 'version',
                            'type' => 'integer',
                            'columnName' => 'version',
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                        'created' => [
                            'fieldName' => 'created',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'created',
                        ],
                        'changed' => [
                            'fieldName' => 'changed',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'changed',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'version' => 'version',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'columnNames' => [
                    [
                        'version' => 'version',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'me_files',
                        'indexes' => [
                            [
                                'columns' => [
                                    'version',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'fileVersions' => [
                            'fieldName' => 'fileVersions',
                            'mappedBy' => 'file',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion',
                            'cascade' => [
                                'persist',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\File',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'media' => [
                            'fieldName' => 'media',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Media',
                            'inversedBy' => 'files',
                            'joinColumns' => [
                                [
                                    'name' => 'idMedia',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\File',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idMedia' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idMedia' => 'idMedia',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idMedia',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'creator' => [
                            'fieldName' => 'creator',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersCreator',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\File',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersCreator' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersCreator' => 'idUsersCreator',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersCreator',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'changer' => [
                            'fieldName' => 'changer',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersChanger',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\File',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersChanger' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersChanger' => 'idUsersChanger',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersChanger',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
38 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\Media',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\Media',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\MediaRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                        'created' => [
                            'fieldName' => 'created',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'created',
                        ],
                        'changed' => [
                            'fieldName' => 'changed',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'changed',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'me_media',
                        'indexes' => [
                            [
                                'columns' => [
                                    'changed',
                                ],
                            ],
                            [
                                'columns' => [
                                    'created',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'files' => [
                            'fieldName' => 'files',
                            'mappedBy' => 'media',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\File',
                            'cascade' => [
                                'persist',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Media',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\MediaType',
                            'inversedBy' => 'media',
                            'joinColumns' => [
                                [
                                    'name' => 'idMediaTypes',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Media',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idMediaTypes' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idMediaTypes' => 'idMediaTypes',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idMediaTypes',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'previewImage' => [
                            'fieldName' => 'previewImage',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Media',
                            'joinColumns' => [
                                [
                                    'name' => 'idPreviewImage',
                                    'referencedColumnName' => 'id',
                                    'unique' => true,
                                ],
                            ],
                            'type' => 1,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Media',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idPreviewImage' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idPreviewImage' => 'idPreviewImage',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idPreviewImage',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'collection' => [
                            'fieldName' => 'collection',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Collection',
                            'inversedBy' => 'media',
                            'joinColumns' => [
                                [
                                    'name' => 'idCollections',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Media',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idCollections' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idCollections' => 'idCollections',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idCollections',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'creator' => [
                            'fieldName' => 'creator',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersCreator',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Media',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersCreator' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersCreator' => 'idUsersCreator',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersCreator',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'changer' => [
                            'fieldName' => 'changer',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersChanger',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Media',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersChanger' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersChanger' => 'idUsersChanger',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersChanger',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
39 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\FormatOptions',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\MediaBundle\\Entity\\FormatOptions',
                ],
                'identifier' => [
                    [
                        'formatKey',
                        'fileVersion',
                    ],
                ],
                'fieldMappings' => [
                    [
                        'cropX' => [
                            'fieldName' => 'cropX',
                            'type' => 'integer',
                            'columnName' => 'crop_x',
                        ],
                        'cropY' => [
                            'fieldName' => 'cropY',
                            'type' => 'integer',
                            'columnName' => 'crop_y',
                        ],
                        'cropWidth' => [
                            'fieldName' => 'cropWidth',
                            'type' => 'integer',
                            'columnName' => 'crop_width',
                        ],
                        'cropHeight' => [
                            'fieldName' => 'cropHeight',
                            'type' => 'integer',
                            'columnName' => 'crop_height',
                        ],
                        'formatKey' => [
                            'id' => true,
                            'fieldName' => 'formatKey',
                            'type' => 'string',
                            'length' => '191',
                            'columnName' => 'format_key',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'crop_x' => 'cropX',
                        'crop_y' => 'cropY',
                        'crop_width' => 'cropWidth',
                        'crop_height' => 'cropHeight',
                        'format_key' => 'formatKey',
                    ],
                ],
                'columnNames' => [
                    [
                        'cropX' => 'crop_x',
                        'cropY' => 'crop_y',
                        'cropWidth' => 'crop_width',
                        'cropHeight' => 'crop_height',
                        'formatKey' => 'format_key',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'me_format_options',
                    ],
                ],
                'associationMappings' => [
                    [
                        'fileVersion' => [
                            'fieldName' => 'fileVersion',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion',
                            'id' => true,
                            'inversedBy' => 'formatOptions',
                            'joinColumns' => [
                                [
                                    'name' => 'fileVersion',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\FormatOptions',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'fileVersion' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'fileVersion' => 'fileVersion',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'fileVersion',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'isIdentifierComposite' => [
                    true,
                ],
                'containsForeignIdentifier' => [
                    true,
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
40 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\AccessControl',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\AccessControl',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\AccessControlRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'permissions' => [
                            'fieldName' => 'permissions',
                            'type' => 'smallint',
                            'columnName' => 'permissions',
                        ],
                        'entityId' => [
                            'fieldName' => 'entityId',
                            'type' => 'string',
                            'columnName' => 'entityId',
                            'length' => 36,
                        ],
                        'entityClass' => [
                            'fieldName' => 'entityClass',
                            'type' => 'string',
                            'columnName' => 'entityClass',
                            'length' => 191,
                        ],
                        'entityIdInteger' => [
                            'fieldName' => 'entityIdInteger',
                            'type' => 'integer',
                            'columnName' => 'entityIdInteger',
                            'nullable' => true,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'permissions' => 'permissions',
                        'entityId' => 'entityId',
                        'entityClass' => 'entityClass',
                        'entityIdInteger' => 'entityIdInteger',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'permissions' => 'permissions',
                        'entityId' => 'entityId',
                        'entityClass' => 'entityClass',
                        'entityIdInteger' => 'entityIdInteger',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'se_access_controls',
                        'indexes' => [
                            [
                                'columns' => [
                                    'entityId',
                                ],
                            ],
                            [
                                'columns' => [
                                    'entityClass',
                                ],
                            ],
                            [
                                'columns' => [
                                    'entityIdInteger',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'role' => [
                            'fieldName' => 'role',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Role',
                            'joinColumns' => [
                                [
                                    'name' => 'idRoles',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\AccessControl',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idRoles' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idRoles' => 'idRoles',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idRoles',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
41 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\Permission',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\Permission',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'context' => [
                            'fieldName' => 'context',
                            'type' => 'string',
                            'columnName' => 'context',
                            'length' => 191,
                        ],
                        'module' => [
                            'fieldName' => 'module',
                            'type' => 'string',
                            'columnName' => 'module',
                            'length' => 60,
                            'nullable' => true,
                        ],
                        'permissions' => [
                            'fieldName' => 'permissions',
                            'type' => 'smallint',
                            'columnName' => 'permissions',
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'context' => 'context',
                        'module' => 'module',
                        'permissions' => 'permissions',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'context' => 'context',
                        'module' => 'module',
                        'permissions' => 'permissions',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'se_permissions',
                        'uniqueConstraints' => [
                            [
                                'columns' => [
                                    'context',
                                    'module',
                                    'idRoles',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'role' => [
                            'fieldName' => 'role',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Role',
                            'inversedBy' => 'permissions',
                            'joinColumns' => [
                                [
                                    'name' => 'idRoles',
                                    'referencedColumnName' => 'id',
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Permission',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idRoles' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idRoles' => 'idRoles',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idRoles',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
42 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\UserRole',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\UserRole',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'text',
                            'columnName' => 'locale',
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'locale' => 'locale',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'locale' => 'locale',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'se_user_roles',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'inversedBy' => 'userRoles',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsers',
                                    'referencedColumnName' => 'id',
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\UserRole',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsers' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsers' => 'idUsers',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsers',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'role' => [
                            'fieldName' => 'role',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Role',
                            'inversedBy' => 'userRoles',
                            'joinColumns' => [
                                [
                                    'name' => 'idRoles',
                                    'referencedColumnName' => 'id',
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\UserRole',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idRoles' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idRoles' => 'idRoles',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idRoles',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
43 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'username' => [
                            'fieldName' => 'username',
                            'type' => 'string',
                            'columnName' => 'username',
                            'length' => 60,
                            'unique' => true,
                        ],
                        'password' => [
                            'fieldName' => 'password',
                            'type' => 'string',
                            'columnName' => 'password',
                            'length' => 128,
                        ],
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'columnName' => 'locale',
                            'length' => 60,
                        ],
                        'salt' => [
                            'fieldName' => 'salt',
                            'type' => 'string',
                            'columnName' => 'salt',
                            'length' => 60,
                        ],
                        'locked' => [
                            'fieldName' => 'locked',
                            'type' => 'boolean',
                            'columnName' => 'locked',
                            'options' => [
                                'default' => '0',
                            ],
                        ],
                        'enabled' => [
                            'fieldName' => 'enabled',
                            'type' => 'boolean',
                            'columnName' => 'enabled',
                            'options' => [
                                'default' => '1',
                            ],
                        ],
                        'lastLogin' => [
                            'fieldName' => 'lastLogin',
                            'type' => 'datetime',
                            'columnName' => 'lastLogin',
                            'nullable' => true,
                        ],
                        'confirmationKey' => [
                            'fieldName' => 'confirmationKey',
                            'type' => 'string',
                            'columnName' => 'confirmationKey',
                            'length' => 128,
                            'nullable' => true,
                        ],
                        'passwordResetToken' => [
                            'fieldName' => 'passwordResetToken',
                            'type' => 'string',
                            'columnName' => 'passwordResetToken',
                            'length' => 80,
                            'unique' => true,
                            'nullable' => true,
                        ],
                        'passwordResetTokenExpiresAt' => [
                            'fieldName' => 'passwordResetTokenExpiresAt',
                            'type' => 'datetime',
                            'columnName' => 'passwordResetTokenExpiresAt',
                            'nullable' => true,
                        ],
                        'passwordResetTokenEmailsSent' => [
                            'fieldName' => 'passwordResetTokenEmailsSent',
                            'type' => 'integer',
                            'columnName' => 'passwordResetTokenEmailsSent',
                            'nullable' => true,
                            'options' => [
                                'default' => '0',
                            ],
                        ],
                        'privateKey' => [
                            'fieldName' => 'privateKey',
                            'type' => 'string',
                            'columnName' => 'privateKey',
                            'length' => 2000,
                            'nullable' => true,
                        ],
                        'apiKey' => [
                            'fieldName' => 'apiKey',
                            'type' => 'guid',
                            'columnName' => 'apiKey',
                            'length' => 128,
                            'nullable' => true,
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'columnName' => 'email',
                            'length' => 191,
                            'unique' => true,
                            'nullable' => true,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                        'created' => [
                            'fieldName' => 'created',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'created',
                        ],
                        'changed' => [
                            'fieldName' => 'changed',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'changed',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'username' => 'username',
                        'password' => 'password',
                        'locale' => 'locale',
                        'salt' => 'salt',
                        'locked' => 'locked',
                        'enabled' => 'enabled',
                        'lastLogin' => 'lastLogin',
                        'confirmationKey' => 'confirmationKey',
                        'passwordResetToken' => 'passwordResetToken',
                        'passwordResetTokenExpiresAt' => 'passwordResetTokenExpiresAt',
                        'passwordResetTokenEmailsSent' => 'passwordResetTokenEmailsSent',
                        'privateKey' => 'privateKey',
                        'apiKey' => 'apiKey',
                        'email' => 'email',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'columnNames' => [
                    [
                        'username' => 'username',
                        'password' => 'password',
                        'locale' => 'locale',
                        'salt' => 'salt',
                        'locked' => 'locked',
                        'enabled' => 'enabled',
                        'lastLogin' => 'lastLogin',
                        'confirmationKey' => 'confirmationKey',
                        'passwordResetToken' => 'passwordResetToken',
                        'passwordResetTokenExpiresAt' => 'passwordResetTokenExpiresAt',
                        'passwordResetTokenEmailsSent' => 'passwordResetTokenEmailsSent',
                        'privateKey' => 'privateKey',
                        'apiKey' => 'apiKey',
                        'email' => 'email',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'se_users',
                    ],
                ],
                'associationMappings' => [
                    [
                        'userRoles' => [
                            'fieldName' => 'userRoles',
                            'mappedBy' => 'user',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\UserRole',
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'userGroups' => [
                            'fieldName' => 'userGroups',
                            'mappedBy' => 'user',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\UserGroup',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'userSettings' => [
                            'fieldName' => 'userSettings',
                            'mappedBy' => 'user',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\UserSetting',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'contact' => [
                            'fieldName' => 'contact',
                            'targetEntity' => 'Sulu\\Bundle\\ContactBundle\\Entity\\Contact',
                            'joinColumns' => [
                                [
                                    'name' => 'idContacts',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                    'unique' => true,
                                ],
                            ],
                            'type' => 1,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idContacts' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idContacts' => 'idContacts',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idContacts',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'creator' => [
                            'fieldName' => 'creator',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersCreator',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersCreator' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersCreator' => 'idUsersCreator',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersCreator',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'changer' => [
                            'fieldName' => 'changer',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersChanger',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersChanger' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersChanger' => 'idUsersChanger',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersChanger',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
44 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\UserSetting',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\UserSetting',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\UserSettingRepository',
                ],
                'identifier' => [
                    [
                        'key',
                        'user',
                    ],
                ],
                'fieldMappings' => [
                    [
                        'value' => [
                            'fieldName' => 'value',
                            'type' => 'text',
                            'columnName' => 'settingsValue',
                        ],
                        'key' => [
                            'id' => true,
                            'fieldName' => 'key',
                            'type' => 'string',
                            'length' => '150',
                            'columnName' => 'settingsKey',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'settingsValue' => 'value',
                        'settingsKey' => 'key',
                    ],
                ],
                'columnNames' => [
                    [
                        'value' => 'settingsValue',
                        'key' => 'settingsKey',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'se_user_settings',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'id' => true,
                            'inversedBy' => 'userSettings',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsers',
                                    'referencedColumnName' => 'id',
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\UserSetting',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsers' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsers' => 'idUsers',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsers',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'isIdentifierComposite' => [
                    true,
                ],
                'containsForeignIdentifier' => [
                    true,
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
45 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\UserGroup',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\UserGroup',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'text',
                            'columnName' => 'locale',
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'locale' => 'locale',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'locale' => 'locale',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'se_user_groups',
                    ],
                ],
                'associationMappings' => [
                    [
                        'group' => [
                            'fieldName' => 'group',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Group',
                            'inversedBy' => 'userGroups',
                            'joinColumns' => [
                                [
                                    'name' => 'idGroups',
                                    'referencedColumnName' => 'id',
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\UserGroup',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idGroups' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idGroups' => 'idGroups',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idGroups',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'user' => [
                            'fieldName' => 'user',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'inversedBy' => 'userGroups',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsers',
                                    'referencedColumnName' => 'id',
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\UserGroup',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsers' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsers' => 'idUsers',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsers',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
46 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\SecurityType',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\SecurityType',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\SecurityTypeRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'columnName' => 'name',
                            'length' => 60,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'name' => 'name',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'name' => 'name',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'se_security_types',
                    ],
                ],
                'associationMappings' => [
                    [
                        'roles' => [
                            'fieldName' => 'roles',
                            'mappedBy' => 'securityType',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Role',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\SecurityType',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
47 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\RoleSetting',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\RoleSetting',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\RoleSettingRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'key' => [
                            'fieldName' => 'key',
                            'type' => 'string',
                            'columnName' => 'settingKey',
                            'length' => 191,
                        ],
                        'value' => [
                            'fieldName' => 'value',
                            'type' => 'json',
                            'columnName' => 'value',
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'settingKey' => 'key',
                        'value' => 'value',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'key' => 'settingKey',
                        'value' => 'value',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'se_role_settings',
                        'indexes' => [
                            [
                                'columns' => [
                                    'settingKey',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [
                            [
                                'columns' => [
                                    'settingKey',
                                    'roleId',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'role' => [
                            'fieldName' => 'role',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Role',
                            'inversedBy' => 'settings',
                            'joinColumns' => [
                                [
                                    'name' => 'roleId',
                                    'referencedColumnName' => 'id',
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\RoleSetting',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'roleId' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'roleId' => 'roleId',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'roleId',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
48 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\Group',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\Group',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\GroupRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'lft' => [
                            'fieldName' => 'lft',
                            'type' => 'integer',
                            'columnName' => 'lft',
                        ],
                        'rgt' => [
                            'fieldName' => 'rgt',
                            'type' => 'integer',
                            'columnName' => 'rgt',
                        ],
                        'depth' => [
                            'fieldName' => 'depth',
                            'type' => 'integer',
                            'columnName' => 'depth',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'columnName' => 'name',
                            'length' => 60,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                        'created' => [
                            'fieldName' => 'created',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'created',
                        ],
                        'changed' => [
                            'fieldName' => 'changed',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'changed',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'lft' => 'lft',
                        'rgt' => 'rgt',
                        'depth' => 'depth',
                        'name' => 'name',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'columnNames' => [
                    [
                        'lft' => 'lft',
                        'rgt' => 'rgt',
                        'depth' => 'depth',
                        'name' => 'name',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'se_groups',
                    ],
                ],
                'associationMappings' => [
                    [
                        'children' => [
                            'fieldName' => 'children',
                            'mappedBy' => 'parent',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Group',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Group',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'userGroups' => [
                            'fieldName' => 'userGroups',
                            'mappedBy' => 'group',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\UserGroup',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Group',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'parent' => [
                            'fieldName' => 'parent',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Group',
                            'inversedBy' => 'children',
                            'joinColumns' => [
                                [
                                    'name' => 'idGroupsParent',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Group',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idGroupsParent' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idGroupsParent' => 'idGroupsParent',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idGroupsParent',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'roles' => [
                            'fieldName' => 'roles',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Role',
                            'inversedBy' => 'groups',
                            'joinTable' => [
                                'name' => 'se_group_roles',
                                'joinColumns' => [
                                    [
                                        'name' => 'idGroups',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idRoles',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Group',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idGroups',
                                'idRoles',
                            ],
                            'relationToSourceKeyColumns' => [
                                'idGroups' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idRoles' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'creator' => [
                            'fieldName' => 'creator',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersCreator',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Group',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersCreator' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersCreator' => 'idUsersCreator',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersCreator',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'changer' => [
                            'fieldName' => 'changer',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersChanger',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Group',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersChanger' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersChanger' => 'idUsersChanger',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersChanger',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
49 => [
    'strategy' => 'nested',
    'activate_locking' => false,
    'locking_timeout' => 3,
    'left' => 'lft',
    'right' => 'rgt',
    'level' => 'depth',
    'parent' => 'parent',
    'useObjectClass' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Group',
],
50 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\Role',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\Role',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\SecurityBundle\\Entity\\RoleRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'columnName' => 'name',
                            'length' => 60,
                            'unique' => true,
                        ],
                        'key' => [
                            'fieldName' => 'key',
                            'type' => 'string',
                            'columnName' => 'role_key',
                            'length' => 60,
                            'unique' => true,
                            'nullable' => true,
                        ],
                        'system' => [
                            'fieldName' => 'system',
                            'type' => 'string',
                            'columnName' => 'securitySystem',
                            'length' => 60,
                        ],
                        'anonymous' => [
                            'fieldName' => 'anonymous',
                            'type' => 'boolean',
                            'columnName' => 'anonymous',
                            'nullable' => false,
                            'options' => [
                                'default' => '0',
                            ],
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                        'created' => [
                            'fieldName' => 'created',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'created',
                        ],
                        'changed' => [
                            'fieldName' => 'changed',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'changed',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'name' => 'name',
                        'role_key' => 'key',
                        'securitySystem' => 'system',
                        'anonymous' => 'anonymous',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'columnNames' => [
                    [
                        'name' => 'name',
                        'key' => 'role_key',
                        'system' => 'securitySystem',
                        'anonymous' => 'anonymous',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'se_roles',
                    ],
                ],
                'associationMappings' => [
                    [
                        'permissions' => [
                            'fieldName' => 'permissions',
                            'mappedBy' => 'role',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Permission',
                            'cascade' => [
                                'persist',
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Role',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'userRoles' => [
                            'fieldName' => 'userRoles',
                            'mappedBy' => 'role',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\UserRole',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Role',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'settings' => [
                            'fieldName' => 'settings',
                            'mappedBy' => 'role',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\RoleSetting',
                            'indexBy' => 'key',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Role',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'securityType' => [
                            'fieldName' => 'securityType',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\SecurityType',
                            'inversedBy' => 'roles',
                            'joinColumns' => [
                                [
                                    'name' => 'idSecurityTypes',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'onDelete' => 'SET NULL',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Role',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idSecurityTypes' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idSecurityTypes' => 'idSecurityTypes',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idSecurityTypes',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'groups' => [
                            'fieldName' => 'groups',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Group',
                            'mappedBy' => 'roles',
                            'type' => 8,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Role',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'creator' => [
                            'fieldName' => 'creator',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersCreator',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Role',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersCreator' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersCreator' => 'idUsersCreator',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersCreator',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'changer' => [
                            'fieldName' => 'changer',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersChanger',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\Role',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersChanger' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersChanger' => 'idUsersChanger',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersChanger',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
51 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\CategoryBundle\\Entity\\Category',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\CategoryBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\CategoryBundle\\Entity\\Category',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'key' => [
                            'fieldName' => 'key',
                            'type' => 'string',
                            'columnName' => 'category_key',
                            'length' => 191,
                            'unique' => true,
                            'nullable' => true,
                        ],
                        'defaultLocale' => [
                            'fieldName' => 'defaultLocale',
                            'type' => 'string',
                            'columnName' => 'default_locale',
                            'length' => 5,
                            'nullable' => false,
                        ],
                        'lft' => [
                            'fieldName' => 'lft',
                            'type' => 'integer',
                            'columnName' => 'lft',
                        ],
                        'rgt' => [
                            'fieldName' => 'rgt',
                            'type' => 'integer',
                            'columnName' => 'rgt',
                        ],
                        'depth' => [
                            'fieldName' => 'depth',
                            'type' => 'integer',
                            'columnName' => 'depth',
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                        'created' => [
                            'fieldName' => 'created',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'created',
                        ],
                        'changed' => [
                            'fieldName' => 'changed',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'changed',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'category_key' => 'key',
                        'default_locale' => 'defaultLocale',
                        'lft' => 'lft',
                        'rgt' => 'rgt',
                        'depth' => 'depth',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'columnNames' => [
                    [
                        'key' => 'category_key',
                        'defaultLocale' => 'default_locale',
                        'lft' => 'lft',
                        'rgt' => 'rgt',
                        'depth' => 'depth',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ca_categories',
                    ],
                ],
                'associationMappings' => [
                    [
                        'meta' => [
                            'fieldName' => 'meta',
                            'mappedBy' => 'category',
                            'targetEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryMeta',
                            'cascade' => [
                                'persist',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\Category',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'translations' => [
                            'fieldName' => 'translations',
                            'mappedBy' => 'category',
                            'targetEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryTranslation',
                            'cascade' => [
                                'persist',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\Category',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'children' => [
                            'fieldName' => 'children',
                            'mappedBy' => 'parent',
                            'targetEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\Category',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\Category',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'parent' => [
                            'fieldName' => 'parent',
                            'targetEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\Category',
                            'inversedBy' => 'children',
                            'joinColumns' => [
                                [
                                    'name' => 'idCategoriesParent',
                                    'referencedColumnName' => 'id',
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\Category',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idCategoriesParent' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idCategoriesParent' => 'idCategoriesParent',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idCategoriesParent',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'creator' => [
                            'fieldName' => 'creator',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersCreator',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\Category',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersCreator' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersCreator' => 'idUsersCreator',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersCreator',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'changer' => [
                            'fieldName' => 'changer',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersChanger',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\Category',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersChanger' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersChanger' => 'idUsersChanger',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersChanger',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
52 => [
    'strategy' => 'nested',
    'activate_locking' => false,
    'locking_timeout' => 3,
    'left' => 'lft',
    'right' => 'rgt',
    'level' => 'depth',
    'parent' => 'parent',
    'useObjectClass' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\Category',
],
53 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryMeta',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\CategoryBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryMeta',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryMetaRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'key' => [
                            'fieldName' => 'key',
                            'type' => 'string',
                            'columnName' => 'meta_key',
                            'length' => 45,
                        ],
                        'value' => [
                            'fieldName' => 'value',
                            'type' => 'string',
                            'columnName' => 'value',
                            'length' => 255,
                        ],
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'columnName' => 'locale',
                            'length' => 5,
                            'nullable' => true,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'meta_key' => 'key',
                        'value' => 'value',
                        'locale' => 'locale',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'key' => 'meta_key',
                        'value' => 'value',
                        'locale' => 'locale',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ca_category_meta',
                    ],
                ],
                'associationMappings' => [
                    [
                        'category' => [
                            'fieldName' => 'category',
                            'targetEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\Category',
                            'inversedBy' => 'meta',
                            'joinColumns' => [
                                [
                                    'name' => 'idCategories',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryMeta',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idCategories' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idCategories' => 'idCategories',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idCategories',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
54 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryTranslationMedia',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\CategoryBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryTranslationMedia',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'position' => [
                            'fieldName' => 'position',
                            'type' => 'integer',
                            'columnName' => 'position',
                            'options' => [
                                'default' => '0',
                            ],
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'position' => 'position',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'position' => 'position',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ca_category_translation_medias',
                    ],
                ],
                'associationMappings' => [
                    [
                        'categoryTranslation' => [
                            'fieldName' => 'categoryTranslation',
                            'targetEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryTranslation',
                            'inversedBy' => 'medias',
                            'joinColumns' => [
                                [
                                    'name' => 'idCategoryTranslations',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryTranslationMedia',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idCategoryTranslations' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idCategoryTranslations' => 'idCategoryTranslations',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idCategoryTranslations',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'media' => [
                            'fieldName' => 'media',
                            'targetEntity' => 'Sulu\\Bundle\\MediaBundle\\Entity\\Media',
                            'joinColumns' => [
                                [
                                    'name' => 'idMedia',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryTranslationMedia',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idMedia' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idMedia' => 'idMedia',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idMedia',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
55 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\CategoryBundle\\Entity\\Keyword',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\CategoryBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\CategoryBundle\\Entity\\Keyword',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\CategoryBundle\\Entity\\KeywordRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'columnName' => 'locale',
                            'length' => 5,
                            'nullable' => false,
                        ],
                        'keyword' => [
                            'fieldName' => 'keyword',
                            'type' => 'string',
                            'columnName' => 'keyword',
                            'length' => 191,
                            'nullable' => false,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                        'created' => [
                            'fieldName' => 'created',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'created',
                        ],
                        'changed' => [
                            'fieldName' => 'changed',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'changed',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'locale' => 'locale',
                        'keyword' => 'keyword',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'columnNames' => [
                    [
                        'locale' => 'locale',
                        'keyword' => 'keyword',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ca_keywords',
                        'indexes' => [
                            [
                                'columns' => [
                                    'keyword',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [
                            'unique_idx' => [
                                'columns' => [
                                    'keyword',
                                    'locale',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'categoryTranslations' => [
                            'fieldName' => 'categoryTranslations',
                            'targetEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryTranslation',
                            'inversedBy' => 'keywords',
                            'joinTable' => [
                                'name' => 'ca_category_translation_keywords',
                                'joinColumns' => [
                                    [
                                        'name' => 'idKeywords',
                                        'referencedColumnName' => 'id',
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'idCategoryTranslations',
                                        'referencedColumnName' => 'id',
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\Keyword',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'idKeywords',
                                'idCategoryTranslations',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'idKeywords' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'idCategoryTranslations' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'creator' => [
                            'fieldName' => 'creator',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersCreator',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\Keyword',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersCreator' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersCreator' => 'idUsersCreator',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersCreator',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'changer' => [
                            'fieldName' => 'changer',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersChanger',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\Keyword',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersChanger' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersChanger' => 'idUsersChanger',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersChanger',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
56 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryTranslation',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\CategoryBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryTranslation',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryTranslationRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'translation' => [
                            'fieldName' => 'translation',
                            'type' => 'string',
                            'columnName' => 'translation',
                            'length' => 255,
                        ],
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'columnName' => 'locale',
                            'length' => 5,
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'columnName' => 'description',
                            'nullable' => true,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                        'created' => [
                            'fieldName' => 'created',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'created',
                        ],
                        'changed' => [
                            'fieldName' => 'changed',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'changed',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'translation' => 'translation',
                        'locale' => 'locale',
                        'description' => 'description',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'columnNames' => [
                    [
                        'translation' => 'translation',
                        'locale' => 'locale',
                        'description' => 'description',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ca_category_translations',
                    ],
                ],
                'associationMappings' => [
                    [
                        'medias' => [
                            'fieldName' => 'medias',
                            'mappedBy' => 'categoryTranslation',
                            'targetEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryTranslationMedia',
                            'cascade' => [
                                'persist',
                            ],
                            'orphanRemoval' => true,
                            'orderBy' => [
                                'position' => 'ASC',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryTranslation',
                            'fetch' => 2,
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'category' => [
                            'fieldName' => 'category',
                            'targetEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\Category',
                            'inversedBy' => 'translations',
                            'joinColumns' => [
                                [
                                    'name' => 'idCategories',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryTranslation',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idCategories' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idCategories' => 'idCategories',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idCategories',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'keywords' => [
                            'fieldName' => 'keywords',
                            'targetEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\Keyword',
                            'mappedBy' => 'categoryTranslations',
                            'type' => 8,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryTranslation',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'creator' => [
                            'fieldName' => 'creator',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersCreator',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryTranslation',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersCreator' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersCreator' => 'idUsersCreator',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersCreator',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'changer' => [
                            'fieldName' => 'changer',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersChanger',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\CategoryBundle\\Entity\\CategoryTranslation',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersChanger' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersChanger' => 'idUsersChanger',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersChanger',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
57 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\TagBundle\\Entity\\Tag',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\TagBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\TagBundle\\Entity\\Tag',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\TagBundle\\Entity\\TagRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'columnName' => 'name',
                            'length' => 191,
                            'unique' => true,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                        'created' => [
                            'fieldName' => 'created',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'created',
                        ],
                        'changed' => [
                            'fieldName' => 'changed',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'changed',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'name' => 'name',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'columnNames' => [
                    [
                        'name' => 'name',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ta_tags',
                    ],
                ],
                'associationMappings' => [
                    [
                        'creator' => [
                            'fieldName' => 'creator',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersCreator',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\TagBundle\\Entity\\Tag',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersCreator' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersCreator' => 'idUsersCreator',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersCreator',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'changer' => [
                            'fieldName' => 'changer',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersChanger',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\TagBundle\\Entity\\Tag',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersChanger' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersChanger' => 'idUsersChanger',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersChanger',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
58 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\WebsiteBundle\\Entity\\Analytics',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\WebsiteBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\WebsiteBundle\\Entity\\Analytics',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\WebsiteBundle\\Entity\\AnalyticsRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'title' => [
                            'fieldName' => 'title',
                            'type' => 'string',
                            'columnName' => 'title',
                            'length' => 255,
                        ],
                        'webspaceKey' => [
                            'fieldName' => 'webspaceKey',
                            'type' => 'string',
                            'columnName' => 'webspace_key',
                            'length' => 191,
                        ],
                        'allDomains' => [
                            'fieldName' => 'allDomains',
                            'type' => 'boolean',
                            'columnName' => 'all_domains',
                        ],
                        'content' => [
                            'fieldName' => 'content',
                            'type' => 'json',
                            'columnName' => 'content',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'columnName' => 'type',
                            'length' => 60,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'title' => 'title',
                        'webspace_key' => 'webspaceKey',
                        'all_domains' => 'allDomains',
                        'content' => 'content',
                        'type' => 'type',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'title' => 'title',
                        'webspaceKey' => 'webspace_key',
                        'allDomains' => 'all_domains',
                        'content' => 'content',
                        'type' => 'type',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'we_analytics',
                        'indexes' => [
                            [
                                'columns' => [
                                    'all_domains',
                                ],
                            ],
                            [
                                'columns' => [
                                    'webspace_key',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'domains' => [
                            'fieldName' => 'domains',
                            'targetEntity' => 'Sulu\\Bundle\\WebsiteBundle\\Entity\\Domain',
                            'joinTable' => [
                                'name' => 'we_analytics_domains',
                                'joinColumns' => [
                                    [
                                        'name' => 'analytics',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'domain',
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'orderBy' => [
                                'id' => 'ASC',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\WebsiteBundle\\Entity\\Analytics',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'analytics',
                                'domain',
                            ],
                            'relationToSourceKeyColumns' => [
                                'analytics' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'domain' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
59 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\WebsiteBundle\\Entity\\Domain',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\WebsiteBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\WebsiteBundle\\Entity\\Domain',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\WebsiteBundle\\Entity\\DomainRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'url' => [
                            'fieldName' => 'url',
                            'type' => 'string',
                            'columnName' => 'url',
                            'length' => 191,
                        ],
                        'environment' => [
                            'fieldName' => 'environment',
                            'type' => 'string',
                            'columnName' => 'environment',
                            'length' => 10,
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'url' => 'url',
                        'environment' => 'environment',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'url' => 'url',
                        'environment' => 'environment',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'we_domains',
                        'indexes' => [
                            [
                                'columns' => [
                                    'url',
                                ],
                            ],
                            [
                                'columns' => [
                                    'environment',
                                ],
                            ],
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
60 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Sulu\\Bundle\\RouteBundle\\Entity\\Route',
                ],
                'namespace' => [
                    'Sulu\\Bundle\\RouteBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Sulu\\Bundle\\RouteBundle\\Entity\\Route',
                ],
                'customRepositoryClassName' => [
                    'Sulu\\Bundle\\RouteBundle\\Entity\\RouteRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'path' => [
                            'fieldName' => 'path',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'path',
                        ],
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'length' => 8,
                            'columnName' => 'locale',
                        ],
                        'entityClass' => [
                            'fieldName' => 'entityClass',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'entity_class',
                        ],
                        'entityId' => [
                            'fieldName' => 'entityId',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'entity_id',
                        ],
                        'history' => [
                            'fieldName' => 'history',
                            'type' => 'boolean',
                            'columnName' => 'history',
                        ],
                        'id' => [
                            'id' => true,
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'columnName' => 'id',
                        ],
                        'created' => [
                            'fieldName' => 'created',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'created',
                        ],
                        'changed' => [
                            'fieldName' => 'changed',
                            'type' => 'datetime',
                            'nullable' => false,
                            'columnName' => 'changed',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'path' => 'path',
                        'locale' => 'locale',
                        'entity_class' => 'entityClass',
                        'entity_id' => 'entityId',
                        'history' => 'history',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'columnNames' => [
                    [
                        'path' => 'path',
                        'locale' => 'locale',
                        'entityClass' => 'entity_class',
                        'entityId' => 'entity_id',
                        'history' => 'history',
                        'id' => 'id',
                        'created' => 'created',
                        'changed' => 'changed',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ro_routes',
                        'indexes' => [
                            [
                                'columns' => [
                                    'path',
                                ],
                            ],
                            [
                                'columns' => [
                                    'locale',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [
                            [
                                'columns' => [
                                    'path',
                                    'locale',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'histories' => [
                            'fieldName' => 'histories',
                            'mappedBy' => 'target',
                            'targetEntity' => 'Sulu\\Bundle\\RouteBundle\\Entity\\Route',
                            'cascade' => [
                                'remove',
                                'persist',
                                'refresh',
                                'merge',
                                'detach',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Sulu\\Bundle\\RouteBundle\\Entity\\Route',
                            'fetch' => 2,
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => true,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'orphanRemoval' => false,
                        ],
                        'target' => [
                            'fieldName' => 'target',
                            'targetEntity' => 'Sulu\\Bundle\\RouteBundle\\Entity\\Route',
                            'inversedBy' => 'histories',
                            'joinColumns' => [
                                [
                                    'name' => 'target_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\RouteBundle\\Entity\\Route',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'target_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'target_id' => 'target_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'target_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'creator' => [
                            'fieldName' => 'creator',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersCreator',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\RouteBundle\\Entity\\Route',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersCreator' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersCreator' => 'idUsersCreator',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersCreator',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'changer' => [
                            'fieldName' => 'changer',
                            'targetEntity' => 'Sulu\\Bundle\\SecurityBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'idUsersChanger',
                                    'onDelete' => 'SET NULL',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Sulu\\Bundle\\RouteBundle\\Entity\\Route',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'idUsersChanger' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'idUsersChanger' => 'idUsersChanger',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'idUsersChanger',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
