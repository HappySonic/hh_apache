<?php

namespace ContainerQpTHIsG;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSuluDocumentManager_Subscriber_Behavior_AutoNameService extends App_KernelProdContainer
{
    /*
     * Gets the private 'sulu_document_manager.subscriber.behavior.auto_name' shared service.
     *
     * @return \Sulu\Component\DocumentManager\Subscriber\Behavior\Path\AutoNameSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 5).'/vendor/sulu/sulu/src/Sulu/Component/DocumentManager/Subscriber/Behavior/Path/AutoNameSubscriber.php';
        include_once \dirname(__DIR__, 5).'/vendor/symfony-cmf/slugifier-api/src/SlugifierInterface.php';
        include_once \dirname(__DIR__, 5).'/vendor/sulu/sulu/src/Sulu/Component/DocumentManager/Slugifier/NodeNameSlugifier.php';
        include_once \dirname(__DIR__, 5).'/vendor/sulu/sulu/src/Sulu/Component/DocumentManager/Slugifier/PathCleanupSlugifier.php';
        include_once \dirname(__DIR__, 5).'/vendor/sulu/sulu/src/Sulu/Component/DocumentManager/NameResolver.php';

        $a = ($container->services['doctrine_phpcr.session'] ?? $container->getDoctrinePhpcr_SessionService());

        return $container->privates['sulu_document_manager.subscriber.behavior.auto_name'] = new \Sulu\Component\DocumentManager\Subscriber\Behavior\Path\AutoNameSubscriber(($container->privates['sulu_document_manager.document_registry'] ?? ($container->privates['sulu_document_manager.document_registry'] = new \Sulu\Component\DocumentManager\DocumentRegistry('en'))), new \Sulu\Component\DocumentManager\Slugifier\NodeNameSlugifier(new \Sulu\Component\DocumentManager\Slugifier\PathCleanupSlugifier(($container->services['sulu.content.path_cleaner'] ?? $container->getSulu_Content_PathCleanerService()))), new \Sulu\Component\DocumentManager\NameResolver(), ($container->privates['sulu_document_manager.node_manager'] ?? $container->getSuluDocumentManager_NodeManagerService()), $a, $a);
    }
}
